{"version":3,"sources":["webpack://Core/webpack/universalModuleDefinition","webpack://Core/webpack/bootstrap","webpack://Core/./Controllers/QuestionnaireController.ts","webpack://Core/./Repository/AnswerRepository.ts","webpack://Core/./Repository/CategoryRepository.ts","webpack://Core/./Repository/CommentRepository.ts","webpack://Core/./Repository/PostRepository.ts","webpack://Core/./Repository/QuestionRepository.ts","webpack://Core/./Repository/QuestionnaireRepository.ts","webpack://Core/./Repository/ReactionRepository.ts","webpack://Core/./Repository/ResourceRepository.ts","webpack://Core/./Repository/SubscriptionRepository.ts","webpack://Core/./Repository/UserAnswerRepository.ts","webpack://Core/./Repository/UserRepository.ts","webpack://Core/./Services/Database/DatabaseCreatorService.ts","webpack://Core/./Services/Database/DatabaseService.ts","webpack://Core/./Services/PostService.ts","webpack://Core/./Services/QuestionnaireService.ts","webpack://Core/./Services/SubscriptionService.ts","webpack://Core/./Services/UserService.ts","webpack://Core/./Utils/Constants.ts","webpack://Core/./index.ts","webpack://Core/./lambdas/handler.ts","webpack://Core/./lambdas/questionnaireLambda.ts","webpack://Core/./node_modules/pg-connection-string/index.js","webpack://Core/./node_modules/pg-int8/index.js","webpack://Core/./node_modules/pg-pool/index.js","webpack://Core/./node_modules/pg-protocol/src/buffer-reader.ts","webpack://Core/./node_modules/pg-protocol/src/buffer-writer.ts","webpack://Core/./node_modules/pg-protocol/src/index.ts","webpack://Core/./node_modules/pg-protocol/src/messages.ts","webpack://Core/./node_modules/pg-protocol/src/parser.ts","webpack://Core/./node_modules/pg-protocol/src/serializer.ts","webpack://Core/./node_modules/pg-types/index.js","webpack://Core/./node_modules/pg-types/lib/arrayParser.js","webpack://Core/./node_modules/pg-types/lib/binaryParsers.js","webpack://Core/./node_modules/pg-types/lib/builtins.js","webpack://Core/./node_modules/pg-types/lib/textParsers.js","webpack://Core/./node_modules/pg/lib/client.js","webpack://Core/./node_modules/pg/lib/connection-parameters.js","webpack://Core/./node_modules/pg/lib/connection.js","webpack://Core/./node_modules/pg/lib/defaults.js","webpack://Core/./node_modules/pg/lib/index.js","webpack://Core/./node_modules/pg/lib/native/client.js","webpack://Core/./node_modules/pg/lib/native/index.js","webpack://Core/./node_modules/pg/lib/native/query.js","webpack://Core/./node_modules/pg/lib/query.js","webpack://Core/./node_modules/pg/lib/result.js","webpack://Core/./node_modules/pg/lib/sasl.js","webpack://Core/./node_modules/pg/lib/type-overrides.js","webpack://Core/./node_modules/pg/lib/utils.js","webpack://Core/./node_modules/pgpass/lib/helper.js","webpack://Core/./node_modules/pgpass/lib/index.js","webpack://Core/./node_modules/postgres-array/index.js","webpack://Core/./node_modules/postgres-bytea/index.js","webpack://Core/./node_modules/postgres-date/index.js","webpack://Core/./node_modules/postgres-interval/index.js","webpack://Core/./node_modules/semver/semver.js","webpack://Core/./node_modules/split/index.js","webpack://Core/./node_modules/through/index.js","webpack://Core/./node_modules/xtend/mutable.js","webpack://Core/external \"assert\"","webpack://Core/external \"crypto\"","webpack://Core/external \"dns\"","webpack://Core/external \"events\"","webpack://Core/external \"fs\"","webpack://Core/external \"net\"","webpack://Core/external \"path\"","webpack://Core/external \"stream\"","webpack://Core/external \"string_decoder\"","webpack://Core/external \"tls\"","webpack://Core/external \"url\"","webpack://Core/external \"util\""],"names":[],"mappings":"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;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnGY;AACZ,qBAAqB,mBAAO,CAAC,sBAAQ;;AAErC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,mDAAmD,mBAAO,CAAC,0CAAI;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClZA,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;AAEzC,MAAa,YAAY;IAMvB,YAAoB,SAAiB,CAAC;QAAlB,WAAM,GAAN,MAAM,CAAY;QAL9B,WAAM,GAAW,WAAW;QAEpC,wCAAwC;QAChC,aAAQ,GAAW,OAAO;IAEO,CAAC;IAEnC,SAAS,CAAC,MAAc,EAAE,MAAc;QAC7C,IAAI,CAAC,M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AACA;AACA;AACA,8DAA8D,mDAAmD;AACjH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AChQA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxEA,YAAY,mBAAO,CAAC,8DAAgB;AACpC,kBAAkB,mBAAO,CAAC,iEAAe;AACzC,gBAAgB,mBAAO,CAAC,4DAAe;AACvC,oBAAoB,mBAAO,CAAC,oEAAmB;AAC/C,iBAAiB,mBAAO,CAAC,8DAAgB;;AAEzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,cAAc,aAAa;;AAE3B;AACA;AACA;;AAEA;AACA,eAAe,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,eAAe,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,eAAe,aAAa;;AAE5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;;AAEA;AACA,eAAe,aAAa;;AAE5B;AACA;;AAEA;AACA,yBAAyB,aAAa;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,aAAa;;AAE1D;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;AAC7B,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,kCAAkC;AAClC,6BAA6B;AAC7B;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC,oCAAoC;AACpC,uCAAuC;AACvC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA,mCAAmC;AACnC,mCAAmC;AACnC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC;AACA;AACA;AACA,uCAAuC;AACvC,wCAAwC;AACxC,gCAAgC;AAChC,iCAAiC;AACjC,mCAAmC;AACnC,mCAAmC;AACnC,kCAAkC;AAClC,mCAAmC;AACnC,mCAAmC;AACnC;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtNY;;AAEZ,mBAAmB,mBAAO,CAAC,sBAAQ;AACnC,WAAW,mBAAO,CAAC,kBAAM;AACzB,YAAY,mBAAO,CAAC,+CAAS;AAC7B,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,mBAAO,CAAC,kDAAQ;AAC7B,oBAAoB,mBAAO,CAAC,iEAAkB;;AAE9C,2BAA2B,mBAAO,CAAC,+EAAyB;AAC5D,YAAY,mBAAO,CAAC,+CAAS;AAC7B,eAAe,mBAAO,CAAC,qDAAY;AACnC,iBAAiB,mBAAO,CAAC,yDAAc;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzmBAAmB,gBAAgB;AACnC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AC3lBY;;AAEZ,UAAU,mBAAO,CAAC,gBAAK;;AAEvB,eAAe,mBAAO,CAAC,qDAAY;;AAEnC,YAAY,mBAAO,CAAC,0EAAsB;;AAE1C;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oEAAoE,oBAAoB;AACxF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;;;;AC3JY;;AAEZ,UAAU,mBAAO,CAAC,gBAAK;AACvB,mBAAmB,mBAAO,CAAC,sBAAQ;AACnC,WAAW,mBAAO,CAAC,kBAAM;;AAEzB,OAAO,mBAAmB,GAAG,mBAAO,CAAC,6DAAa;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,gBAAK;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/MY;;AAEZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,cAAc,mBAAO,CAAC,kDAAU;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC/EW;;AAEZ,aAAa,mBAAO,CAAC,iDAAU;AAC/B,eAAe,mBAAO,CAAC,qDAAY;AACnC,iBAAiB,mBAAO,CAAC,yDAAc;AACvC,WAAW,mBAAO,CAAC,gDAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,kDAAU;AACjC;;AAEA;AACA,0BAA0B,mBAAO,CAAC,uDAAU;AAC5C,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,uDAAU;AAC1C,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;ACvDY;;AAEZ;AACA,aAAa,mBAAO,CAAC,mIAAW;AAChC,oBAAoB,mBAAO,CAAC,kEAAmB;AAC/C,aAAa,mBAAO,CAAC,+CAAQ;AAC7B,UAAU,mBAAO,CAAC,0DAAoB;AACtC,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,mBAAmB,mBAAO,CAAC,sBAAQ;AACnC,WAAW,mBAAO,CAAC,kBAAM;AACzB,2BAA2B,mBAAO,CAAC,gFAA0B;;AAE7D;AACA;;AAEA,kBAAkB,mBAAO,CAAC,sDAAS;;AAEnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mDAAmD,EAAE;AACrD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1SY;AACZ,iBAAiB,mBAAO,CAAC,wDAAU;;;;;;;;;;;;;ACDvB;;AAEZ,mBAAmB,mBAAO,CAAC,sBAAQ;AACnC,WAAW,mBAAO,CAAC,kBAAM;AACzB,YAAY,mBAAO,CAAC,gDAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uEAAuE,UAAU;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;ACpKY;;AAEZ,OAAO,eAAe,GAAG,mBAAO,CAAC,sBAAQ;;AAEzC,eAAe,mBAAO,CAAC,iDAAU;AACjC,cAAc,mBAAO,CAAC,+CAAS;;AAE/B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,UAAU;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnOY;;AAEZ,YAAY,mBAAO,CAAC,kDAAU;;AAE9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,eAAe;AAC7D;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnGY;AACZ,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,GAAG;AACH,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtJY;;AAEZ,YAAY,mBAAO,CAAC,kDAAU;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AClCY;;AAEZ,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B,iBAAiB,mBAAO,CAAC,qDAAY;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACzLa;;AAEb,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,YAAY,mBAAO,CAAC,4CAAO;AAC3B,WAAW,mBAAO,CAAC,kBAAM;AACzB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE;AACpE;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACvOa;;AAEb,WAAW,mBAAO,CAAC,kBAAM;AACzB,SAAS,mBAAO,CAAC,cAAI;AACrB,aAAa,mBAAO,CAAC,wDAAa;AAClC;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;;;;;;;;;;;;;ACtBY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gCAAgC;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AChGY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB,EAAE;AACnB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BY;;AAEZ,qBAAqB,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,GAAG;AAC1E,iBAAiB,GAAG,MAAM,EAAE,MAAM,EAAE;AACpC,4BAA4B,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnHY;;AAEZ,aAAa,mBAAO,CAAC,sDAAe;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD,IAAI;AAC1D;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;;;;;;;;;;;;AC5HA;AACA,IAAI,KAA0B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,sCAAsC;AACtC,oCAAoC;AACpC,sCAAsC;AACtC,oCAAoC;AACpC,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,IAA0C;AAC9C,EAAE,oCAAO,OAAO;AAAA;AAAA;AAAA;AAAA,oGAAC;;;;;;;;;;;;ACtqCjB;;AAEA;AACA;AACA;;;AAGA,cAAc,mBAAO,CAAC,gDAAS;AAC/B,cAAc,mBAAO,CAAC,sCAAgB;;AAEtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;AC9DA,aAAa,mBAAO,CAAC,sBAAQ;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,oCAAoC;AACpC,4BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1GA;;AAEA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AChBA,mC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,iC","file":"./dist/bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Core\"] = factory();\n\telse\n\t\troot[\"Core\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n","import * as QuestionnaireService from '../Services/QuestionnaireService';\r\nimport {APIGatewayProxyEvent} from \"aws-lambda\";\r\n\r\nexport async function getById(request: APIGatewayProxyEvent) {\r\n    return QuestionnaireService.getById(parseInt(request.queryStringParameters!.id));\r\n}\r\n\r\nexport async function getAll() {\r\n    return QuestionnaireService.getAll();\r\n}\r\n\r\nexport async function add(request: { body: any; }) {\r\n    let body = request.body;\r\n    return QuestionnaireService.add(body.priority, body.name);\r\n}\r\n\r\nexport async function remove(request: APIGatewayProxyEvent) {\r\n    return QuestionnaireService.remove(parseInt(request.queryStringParameters!.id));\r\n}\r\n","import * as DatabaseService from '../Services/Database/DatabaseService';\r\nimport * as Constants from '../Utils/Constants'\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function getById(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.ANSWER.GET_BY_ID(id))\r\n}\r\n\r\nexport async function getAllByQuestionId(questionId: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.ANSWER.GET_ALL_BY_QUESTION_ID(questionId))\r\n}\r\n\r\nexport async function add(question_id: number, priority: number, scale_value: number, text: string, image_url: string): Promise<QueryResult> {\r\n    const query = Constants.QUERIES.ANSWER.ADD(question_id, priority, scale_value, text, image_url)\r\n    return DatabaseService.executeQuery(query);\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.ANSWER.DELETE(id));\r\n}\r\n","import * as DatabaseService from \"../Services/Database/DatabaseService\";\r\nimport * as Constants from \"../Utils/Constants\";\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function add(text: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.CATEGORY.ADD(text));\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.CATEGORY.DELETE(id));\r\n}\r\n\r\nexport async function getAll(): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.CATEGORY.GET_ALL())\r\n}\r\n","import * as DatabaseService from '../Services/Database/DatabaseService'\r\nimport * as Constants from '../Utils/Constants';\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function getById(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.COMMENT.GET_BY_ID(id))\r\n}\r\n\r\nexport async function getAllByPostId(post_id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.COMMENT.GET_BY_POST_ID(post_id))\r\n}\r\n\r\nexport async function add(user_internal_id: number, post_id: number, text: string): Promise<any> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.COMMENT.ADD(user_internal_id, post_id, text));\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.COMMENT.DELETE(id));\r\n}\r\n","import * as DatabaseService from \"../Services/Database/DatabaseService\";\r\nimport * as Constants from \"../Utils/Constants\";\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function getById(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.POST.GET_BY_ID(id))\r\n}\r\n\r\nexport async function add(user_internal_id: number, text: string, priority: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.POST.ADD(user_internal_id, text, priority));\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.POST.DELETE(id));\r\n}\r\n\r\nexport async function getPostsBySubscriptionAndOrdered(email: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.POST.GET_ALL_BY_SUBSCRIPTION_AND_ORDERED(email));\r\n}\r\n\r\nexport async function getAll(): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.POST.GET_ALL())\r\n}\r\n\r\nexport async function getAllByCategoryId(category_id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.POST.GET_ALL_BY_CATEGORY_ID(category_id))\r\n}\r\n\r\nexport async function count(): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.POST.COUNT())\r\n}\r\n\r\n","import * as DatabaseService from \"../Services/Database/DatabaseService\";\r\nimport * as Constants from \"../Utils/Constants\";\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function getById(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.QUESTION.GET_BY_ID(id))\r\n}\r\n\r\nexport async function getAllByQuestionnaireId(questionnaireId: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.QUESTION.GET_BY_QUESTIONNAIRE_ID(questionnaireId))\r\n}\r\n\r\nexport async function add(questionnaire_id: number, question_type: string, multiple_answers: boolean, title: string, description: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.QUESTION.ADD(questionnaire_id, question_type, multiple_answers, title, description));\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.QUESTION.DELETE(id));\r\n}\r\n","import * as DatabaseService from '../Services/Database/DatabaseService';\r\nimport * as Constants from '../Utils/Constants';\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function getById(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.QUESTIONNAIRE.GET_BY_ID(id))\r\n}\r\n\r\nexport async function getAll(): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.QUESTIONNAIRE.GET_ALL())\r\n}\r\n\r\nexport async function getComputedQuestionnaireList(email: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.QUESTIONNAIRE.GET_ALL_QUESTIONNAIRES_BY_USER_AND_ORDERED(email))\r\n}\r\n\r\nexport async function getAnsweredQuestionnaireList(email: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.QUESTIONNAIRE.GET_ANSWERED_QUESTIONNAIRE_LIST(email))\r\n}\r\n\r\nexport async function add(priority: number, name: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.QUESTIONNAIRE.ADD(priority, name));\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.QUESTIONNAIRE.DELETE(id));\r\n}\r\n","import * as DatabaseService from \"../Services/Database/DatabaseService\";\r\nimport * as Constants from \"../Utils/Constants\";\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function getById(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.REACTION.GET_BY_ID(id))\r\n}\r\n\r\nexport async function getAllByPostId(post_id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.REACTION.GET_BY_POST_ID(post_id))\r\n}\r\n\r\nexport async function add(user_internal_id: number, post_id: number, reaction: string): Promise<any> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.REACTION.ADD(user_internal_id, post_id, reaction));\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.REACTION.DELETE(id));\r\n}\r\n","import * as DatabaseService from \"../Services/Database/DatabaseService\";\r\nimport * as Constants from \"../Utils/Constants\";\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function getById(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.RESOURCE.GET_BY_ID(id))\r\n}\r\n\r\nexport async function getAllByPostId(post_id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.RESOURCE.GET_BY_POST_ID(post_id))\r\n}\r\n\r\nexport async function add(post_id: number, url: string, type: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.RESOURCE.ADD(post_id, url, type));\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.RESOURCE.DELETE(id));\r\n}\r\n","import * as DatabaseService from \"../Services/Database/DatabaseService\";\r\nimport * as Constants from \"../Utils/Constants\";\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function getAll(): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.SUBSCRIPTION.GET_ALL())\r\n}\r\n\r\nexport async function getById(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.SUBSCRIPTION.GET_BY_ID(id))\r\n}\r\n\r\nexport async function add(name: string, description: string, post_limit: number, questionnaire_limit: number, comments_active: boolean,\r\n                          reactions_active: boolean, support: string, price: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.SUBSCRIPTION.ADD(name, description, post_limit,\r\n        questionnaire_limit, comments_active, reactions_active, support, price));\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.SUBSCRIPTION.DELETE(id));\r\n}\r\n","import * as DatabaseService from \"../Services/Database/DatabaseService\";\r\nimport * as Constants from \"../Utils/Constants\";\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function getById(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER_ANSWER.GET_BY_ID(id))\r\n}\r\n\r\nexport async function add(user_internal_id: number, question_id: number, answer_id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER_ANSWER.ADD(user_internal_id, question_id, answer_id));\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER_ANSWER.DELETE(id));\r\n}\r\n","import * as DatabaseService from \"../Services/Database/DatabaseService\";\r\nimport * as Constants from \"../Utils/Constants\";\r\nimport {QueryResult} from \"pg\";\r\n\r\nexport async function getById(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER.GET_BY_ID(id))\r\n}\r\n\r\nexport async function getByEmail(email: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER.GET_BY_EMAIL(email))\r\n}\r\n\r\nexport async function changeSubscription(subscription_id: number, user_email: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER.CHANGE_SUBSCRIPTION(subscription_id, user_email))\r\n}\r\n\r\nexport async function add(subscription_id: number, type: string, email: string, username: string,\r\n                          first_name: string, last_name: string, address: string, city: string,\r\n                          country: string, zip_code: string, theme: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER.ADD(subscription_id, type, email, username, first_name, last_name, address, city, country, zip_code, theme));\r\n}\r\n\r\nexport async function editDetails(email: string, new_email: string, first_name: string, last_name: string, city: string, country: string, zip_code: string): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER.EDIT_DETAILS(email, new_email, first_name, last_name, city, country, zip_code));\r\n}\r\n\r\nexport async function remove(id: number): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER.DELETE(id));\r\n}\r\n\r\nexport async function getShallowUsersByIds(ids: number[]): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER.GET_SHALLOW_USERS_BY_IDS(ids))\r\n}\r\n\r\nexport async function getAll(): Promise<QueryResult> {\r\n    return DatabaseService.executeQuery(Constants.QUERIES.USER.GET_ALL())\r\n}","import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as DatabaseService from './DatabaseService';\r\n\r\nconst filePath = path.resolve(path.join(__dirname,'../../sql/create_social_media_db.sql'));\r\nconst SCHEMA_EXISTS_QUERY = 'SELECT schema_name FROM information_schema.schemata WHERE schema_name = \\'social_media_db\\';';\r\n\r\nlet SCHEMA_EXISTS = false;\r\n\r\nexport async function checkIfSchemaExists(): Promise<boolean> {\r\n    if (SCHEMA_EXISTS) {\r\n        return SCHEMA_EXISTS\r\n    }\r\n\r\n    await DatabaseService.executeQuery(SCHEMA_EXISTS_QUERY);\r\n    SCHEMA_EXISTS = true;\r\n    return true\r\n}\r\n\r\nexport async function createSchemaIfMissing(): Promise<void> {\r\n    if(await checkIfSchemaExists()) {\r\n        return\r\n    }\r\n\r\n    let data = await fs.promises.readFile(filePath, { encoding: 'utf8' });\r\n    await DatabaseService.executeQuery(data);\r\n}\r\n","import {Client, QueryResult} from 'pg';\r\n\r\nconst client = new Client({\r\n    user: process.env.DB_USER || 'postgres',\r\n    host: process.env.DB_HOST || 'localhost',\r\n    database: process.env.DB_NAME || 'postgres',\r\n    password: process.env.DB_PASS || '1234',\r\n    port: 5432\r\n});\r\n\r\nclient.connect(function(err: Error) {\r\n    if (err) {\r\n        console.error('Database connection failed: ' + err.stack);\r\n        return;\r\n    }\r\n    console.log('Connected to database.');\r\n});\r\n\r\nexport function executeQuery(query: string): Promise<QueryResult> {\r\n    return new Promise<any>(((resolve, reject) => {\r\n        client.query(query)\r\n            .then(resolve)\r\n            .catch((error) => {\r\n                console.error(query, error);\r\n                resolve(error);\r\n                //reject(error);\r\n            })\r\n    }));\r\n}\r\n","import * as PostRepository from '../Repository/PostRepository';\r\nimport * as CategoryRepository from '../Repository/CategoryRepository';\r\nimport * as ResourceRepository from '../Repository/ResourceRepository';\r\nimport * as CommentRepository from '../Repository/CommentRepository';\r\nimport * as ReactionRepository from '../Repository/ReactionRepository';\r\nimport * as UserRepository from '../Repository/UserRepository';\r\nimport * as Constants from '../Utils/Constants';\r\nimport {Post, PostComment, PostReaction, PostResource} from \"../Models/Post\";\r\nimport {CommentDTO, ReactionDTO} from \"../lambdas/DTOs/ModelDTOs\";\r\nimport {getUserInternalIdBy} from \"./UserService\";\r\n\r\nexport class PostError extends Error {\r\n    readonly status\r\n    readonly error\r\n\r\n    constructor(status: number, error: string) {\r\n        super(error);\r\n        this.status = status\r\n        this.error = error\r\n    }\r\n}\r\n\r\nexport async function getById(id: number) {\r\n    const response = await PostRepository.getById(id);\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new PostError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return response.rows[0]\r\n}\r\n\r\nexport async function getAllByCategoryId(userEmail: string, categoryId: number) {\r\n    const posts = await PostRepository.getPostsBySubscriptionAndOrdered(userEmail);\r\n    let rowCount = posts.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new PostError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.POST);\r\n    }\r\n\r\n    let validPosts = posts.rows.filter((post: any) => post.post_category_id == categoryId);\r\n\r\n    return computePostDetails(validPosts);\r\n}\r\n\r\nexport async function getComputedPostList(userEmail: string) {\r\n    const posts = await PostRepository.getPostsBySubscriptionAndOrdered(userEmail);\r\n    let rowCount = posts.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new PostError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.POST);\r\n    }\r\n\r\n    return computePostDetails(posts.rows);\r\n}\r\n\r\nasync function computePostDetails(posts: any) {\r\n    let response: Post[] = [];\r\n    let postLength = posts.length;\r\n    if (postLength === 0) {\r\n        return {\r\n            posts: [],\r\n            totalPostCount: 0,\r\n            users: []\r\n        };\r\n    }\r\n    for (const post of posts) {\r\n        let postId = post.id;\r\n        let resources : PostResource[] = (await ResourceRepository.getAllByPostId(postId)).rows;\r\n        let comments : PostComment[] = (await CommentRepository.getAllByPostId(postId)).rows;\r\n        let reactions : PostReaction[] = (await ReactionRepository.getAllByPostId(postId)).rows;\r\n        comments = comments.filter((comment) => comment.visible)\r\n        response.push({\r\n            ...post,\r\n            resources: resources,\r\n            comments: comments,\r\n            reactions: reactions\r\n        })\r\n    }\r\n\r\n    let userIds : number[] = getUniqueUserInternalIdsFromPosts(response)\r\n    let shallowUsers = (await UserRepository.getShallowUsersByIds(userIds)).rows\r\n        .map((user) => {\r\n            return {\r\n                ...user,\r\n                user_internal_id: user.user_internal_id.toString()\r\n            }\r\n        });\r\n\r\n    const postCountResponse = await PostRepository.count();\r\n    if (postCountResponse.rowCount > 0) {\r\n        postLength = postCountResponse.rows[0].count;\r\n    }\r\n    return {\r\n        posts: response,\r\n        totalPostCount: postLength,\r\n        users: shallowUsers\r\n    };\r\n}\r\n\r\nexport async function getCategories(userEmail: string) {\r\n    const categories = await CategoryRepository.getAll();\r\n    let rowCount = categories.rowCount;\r\n    return {\r\n        categories: categories.rows\r\n    };\r\n}\r\n\r\nexport async function reactionAddHandle(postId: number, body: ReactionDTO, userEmail: string) {\r\n    let user_internal_id = await getUserInternalIdBy(userEmail);\r\n    const response = await ReactionRepository.add(user_internal_id, body.post_id, body.reaction);\r\n\r\n    if (response.code && response.code == 23505) {\r\n        const reactionsByPost = await ReactionRepository.getAllByPostId(body.post_id);\r\n        let reaction = reactionsByPost.rows.find((row) => row.user_internal_id == user_internal_id);\r\n        return {\r\n            reactionId: reaction.id\r\n        }\r\n    }\r\n    return {\r\n        reactionId: response.rows[0].id\r\n    };\r\n}\r\n\r\nexport async function reactionDeleteHandle(post_id: number, reactionId: number) {\r\n    const response = await ReactionRepository.remove(reactionId);\r\n    return {\r\n        deletedReactionsCount: response.rowCount\r\n    };\r\n}\r\n\r\nexport async function commentAddHandle(postId: number, body: CommentDTO, userEmail: string) {\r\n    let user_internal_id = await getUserInternalIdBy(userEmail)\r\n    const response = await CommentRepository.add(user_internal_id, body.post_id, body.comment);\r\n\r\n    if (response.rowCount === 0) {\r\n        throw new PostError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.COMMENT);\r\n    }\r\n\r\n    return {\r\n        commentId: response.rows[0].id\r\n    };\r\n}\r\n\r\nexport async function commentDeleteHandle(post_id: number, commentId: number) {\r\n    const response = await CommentRepository.remove(commentId);\r\n    return {\r\n        deletedCommentsCount: response.rowCount\r\n    };\r\n}\r\n\r\nfunction getUniqueUserInternalIdsFromPosts(posts: Post[]) {\r\n    let ids: any[] = [];\r\n    posts.forEach((post) => {\r\n       ids.push(post.user_internal_id);\r\n       post.comments.map((comment) => comment.user_internal_id).forEach((id) => ids.push(id))\r\n       post.reactions.map((reaction) => reaction.user_internal_id).forEach((id) => ids.push(id))\r\n    });\r\n    return Array.from(new Set(ids));\r\n}\r\n\r\nexport async function add(user_internal_id: number, text: string, priority: number) {\r\n    let response = await PostRepository.add(user_internal_id, text, priority);\r\n    return response.rows[0]\r\n}\r\n\r\nexport async function remove(id: number) {\r\n    const response = await PostRepository.remove(id);\r\n\r\n    if (response.rowCount === 0) {\r\n        throw new PostError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return response.rows;\r\n}\r\n","import * as Constants from '../Utils/Constants';\r\nimport {Post, PostComment, PostReaction, PostResource} from \"../Models/Post\";\r\nimport * as AnswerRepository from \"../Repository/AnswerRepository\";\r\nimport * as CommentRepository from \"../Repository/CommentRepository\";\r\nimport * as ResourceRepository from \"../Repository/ResourceRepository\";\r\nimport * as ReactionRepository from \"../Repository/ReactionRepository\";\r\nimport * as QuestionRepository from \"../Repository/QuestionRepository\";\r\nimport * as QuestionnaireRepository from '../Repository/QuestionnaireRepository';\r\nimport * as UserAnswerRepository from '../Repository/UserAnswerRepository';\r\nimport {getUserInternalIdBy, getCurrentUser} from \"./UserService\";\r\nimport {Answer, Question, Questionnaire} from \"../Models/Questionnaire\";\r\n\r\nexport class QuestionnaireError extends Error {\r\n    readonly status\r\n    readonly error\r\n\r\n    constructor(status: number, error: string) {\r\n        super(error);\r\n        this.status = status\r\n        this.error = error\r\n    }\r\n}\r\n\r\nexport async function getById(id: number) {\r\n    const response = await QuestionnaireRepository.getById(id);\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new QuestionnaireError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return response.rows[0]\r\n}\r\n\r\nexport async function getAll() {\r\n    const response = await QuestionnaireRepository.getAll();\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new QuestionnaireError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return response.rows\r\n}\r\n\r\nexport async function getComputedQuestionnaireList(email: string) {\r\n    const questionnaires = await QuestionnaireRepository.getComputedQuestionnaireList(email);\r\n    let rowCount = questionnaires.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new QuestionnaireError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    let questionnairesResponse: Questionnaire[] = [];\r\n    for (const questionnaire of questionnaires.rows) {\r\n        let questionnaireId = questionnaire.id;\r\n        let questions = await QuestionRepository.getAllByQuestionnaireId(questionnaireId);\r\n\r\n        let questionsResponse = [];\r\n        for (const question of questions.rows) {\r\n            let questionId = question.id;\r\n            let answers = (await AnswerRepository.getAllByQuestionId(questionId)).rows;\r\n            questionsResponse.push({\r\n                ... question,\r\n                possibleAnswers: answers\r\n            })\r\n        }\r\n        questionnairesResponse.push({\r\n            ...questionnaire,\r\n            questions: questionsResponse\r\n        })\r\n    }\r\n\r\n    let answeredQuestionnaireListResponse = await QuestionnaireRepository.getAnsweredQuestionnaireList(email);\r\n\r\n    return {\r\n        answeredQuestionnaireNumber: answeredQuestionnaireListResponse.rowCount,\r\n        questionnaires: questionnairesResponse\r\n    }\r\n}\r\n\r\nexport async function addUserAnswers(questionnaireId: number, body: any, email: string) {\r\n    let userAnswers = body.userAnswers;\r\n    console.log(userAnswers);\r\n    let user_internal_id = await getUserInternalIdBy(email);\r\n\r\n    userAnswers.forEach((obj: any) => {\r\n        obj.answers.forEach((answerId: any) => {\r\n            UserAnswerRepository.add(user_internal_id, Number(obj.questionId), answerId);\r\n        })\r\n    });\r\n\r\n    return {\r\n        statusCode: 200,\r\n        body: \"User answers registered successfully.\"\r\n    };\r\n}\r\n\r\nexport async function deleteQuestionnaire(questionnaireId: number, email: string) {\r\n    const currentUser = await getCurrentUser(email);\r\n    if (currentUser.type != 'ADMIN') {\r\n        return {\r\n            statusCode: 403,\r\n            body: \"User has no right to delete.\"\r\n        };\r\n    }\r\n\r\n    const questionnaires = await QuestionnaireRepository.remove(questionnaireId);\r\n    let rowCount = questionnaires.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new QuestionnaireError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return {\r\n        statusCode: 200,\r\n        body: \"Questionnaire deleted successfully.\"\r\n    };\r\n}\r\n\r\nexport async function add(priority: number, name: string) {\r\n    let response = await QuestionnaireRepository.add(priority, name);\r\n    return response.rows[0]\r\n}\r\n\r\nexport async function remove(id: number) {\r\n    const response = await QuestionnaireRepository.remove(id);\r\n\r\n    if (response.rowCount === 0) {\r\n        throw new QuestionnaireError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return response.rows;\r\n}\r\n","import * as SubscriptionRepository from '../Repository/SubscriptionRepository';\r\nimport * as Constants from '../Utils/Constants';\r\nimport {QueryResult} from \"pg\";\r\nimport * as DatabaseService from \"./Database/DatabaseService\";\r\n\r\nexport class SubscriptionError extends Error {\r\n    readonly status\r\n    readonly error\r\n\r\n    constructor(status: number, error: string) {\r\n        super(error);\r\n        this.status = status\r\n        this.error = error\r\n    }\r\n}\r\n\r\nexport async function getAll() {\r\n    const response = await SubscriptionRepository.getAll();\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new SubscriptionError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return response.rows\r\n}\r\n\r\nexport async function getById(id: number) {\r\n    const response = await SubscriptionRepository.getById(id);\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new SubscriptionError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return response.rows[0]\r\n}\r\n\r\nexport async function add(name: string, description: string, post_limit: number, questionnaire_limit: number, comments_active: boolean,\r\n                          reactions_active: boolean, support: string, price: number): Promise<QueryResult> {\r\n    const response = await SubscriptionRepository.add(name, description, post_limit, questionnaire_limit, comments_active, reactions_active, support, price);\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new SubscriptionError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.USER);\r\n    }\r\n\r\n    return response.rows[0]\r\n}\r\n\r\nexport async function remove(id: number) {\r\n    const response = await SubscriptionRepository.remove(id);\r\n\r\n    if (response.rowCount === 0) {\r\n        throw new SubscriptionError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return response.rows;\r\n}\r\n","import * as UserRepository from '../Repository/UserRepository';\r\nimport * as Constants from '../Utils/Constants';\r\nimport {QueryResult} from \"pg\";\r\nimport * as DatabaseService from \"./Database/DatabaseService\";\r\nimport {PostError} from \"./PostService\";\r\n\r\nexport class UserError extends Error {\r\n    readonly status\r\n    readonly error\r\n\r\n    constructor(status: number, error: string) {\r\n        super(error);\r\n        this.status = status\r\n        this.error = error\r\n    }\r\n}\r\n\r\nexport async function getById(id: number) {\r\n    const response = await UserRepository.getById(id);\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new UserError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return response.rows[0]\r\n}\r\n\r\n\r\nexport async function getUserInternalIdBy(email: string) {\r\n    const currentUserQueryResponse = await UserRepository.getByEmail(email)\r\n\r\n    let rowCount = currentUserQueryResponse.rowCount;\r\n    if (rowCount === 0) {\r\n        throw new UserError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.USER);\r\n    }\r\n\r\n    return currentUserQueryResponse.rows[0].user_internal_id;\r\n}\r\n\r\nexport async function getCurrentUser(email: string) {\r\n    const response = await UserRepository.getByEmail(email);\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new UserError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.USER);\r\n    }\r\n\r\n    return response.rows[0]\r\n}\r\n\r\nasync function doAddUserDetails(email: string, body: any) {\r\n    const response = await UserRepository.add(1, 'USER', email, email, body.first_name,\r\n                        body.last_name, 'address', body.city, body.country, body.zip_code, 'LIGHT');\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new UserError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.USER);\r\n    }\r\n\r\n    return getCurrentUser(email);\r\n}\r\n\r\nasync function doEditUserDetails(email: string, body: any) {\r\n    console.log('doEditUserDetails', email, body);\r\n    const response = await UserRepository.editDetails(email, body.email, body.first_name, body.last_name, body.city, body.country, body.zip_code);\r\n    let rowCount = response.rowCount;\r\n\r\n    console.log('doEditUserDetails', rowCount);\r\n\r\n    if (rowCount === 0) {\r\n        throw new UserError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.USER);\r\n    }\r\n\r\n    return getCurrentUser(body.email);\r\n}\r\n\r\nexport async function changeUserDetails(email: string, body: any) {\r\n    console.log('changeUserDetails', email, body);\r\n    if (body.email === undefined || body.email === null) {\r\n        return await doAddUserDetails(email, body);\r\n    }\r\n    return await doEditUserDetails(email, body);\r\n}\r\n\r\nexport async function changeSubscription(subscription_id: number, user_email: string) {\r\n    const response = await UserRepository.changeSubscription(subscription_id, user_email);\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === undefined || rowCount === 0) {\r\n        throw new UserError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.SUBSCRIPTION);\r\n    }\r\n\r\n    return Constants.MESSAGES.SUCCESS.SUBSCRIPTION_UPDATED;\r\n}\r\n\r\nexport async function add(subscription_id: number, type: string, email: string, username: string,\r\n                          first_name: string, last_name: string, address: string, city: string,\r\n                          country: string, zip_code: string, theme: string): Promise<QueryResult> {\r\n    const response = await UserRepository.add(subscription_id, type, email, username, first_name, last_name, address, city, country, zip_code, theme);\r\n    let rowCount = response.rowCount;\r\n\r\n    if (rowCount === 0) {\r\n        throw new UserError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.USER);\r\n    }\r\n\r\n    return response.rows[0]\r\n}\r\n\r\nexport async function remove(id: number) {\r\n    const response = await UserRepository.remove(id);\r\n\r\n    if (response.rowCount === 0) {\r\n        throw new UserError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.QUESTIONNAIRE);\r\n    }\r\n\r\n    return response.rows;\r\n}\r\n","const SCHEMAS = {\r\n    SOCIAL_MEDIA_DB: {\r\n        NAME: 'social_media_db',\r\n        TABLES: {\r\n            QUESTIONNAIRE: {\r\n                NAME: 'questionnaire',\r\n                COLUMNS: [\r\n                    'priority', 'name'\r\n                ]\r\n            },\r\n            QUESTION: {\r\n                NAME: 'question',\r\n                COLUMNS: [\r\n                    'questionnaire_id', 'question_type', 'multiple_answers', 'title', 'description'\r\n                ]\r\n            },\r\n            LINKAGE: {\r\n                NAME: 'linkage',\r\n                COLUMNS: [\r\n                    'first_question_id', 'second_question_id'\r\n                ]\r\n            },\r\n            ANSWER: {\r\n                NAME: 'answer',\r\n                COLUMNS: [\r\n                    'question_id', 'priority', 'scale_value', 'text', 'image_url'\r\n                ]\r\n            },\r\n            USER_ANSWER: {\r\n                NAME: 'user_answer',\r\n                COLUMNS: [\r\n                    'user_internal_id', 'question_id', 'answer_id', 'timestamp'\r\n                ]\r\n            },\r\n            POST: {\r\n                NAME: 'post',\r\n                COLUMNS: [\r\n                    'user_internal_id', 'post_category_id', 'text', 'priority', 'timestamp'\r\n                ]\r\n            },\r\n            CATEGORY: {\r\n                NAME: 'post_category',\r\n                COLUMNS: [\r\n                    'text'\r\n                ]\r\n            },\r\n            POST_CATEGORY: {\r\n                NAME: 'post_category',\r\n                COLUMNS: [\r\n                    'text'\r\n                ]\r\n            },\r\n            RESOURCE: {\r\n                NAME: 'resource',\r\n                COLUMNS: [\r\n                    'post_id', 'url', 'type', 'timestamp'\r\n                ]\r\n            },\r\n            COMMENT: {\r\n                NAME: 'comment',\r\n                COLUMNS: [\r\n                    'user_internal_id', 'post_id', 'text', 'visible', 'timestamp'\r\n                ]\r\n            },\r\n            REACTION: {\r\n                NAME: 'reaction',\r\n                COLUMNS: [\r\n                    'user_internal_id', 'post_id', 'reaction', 'timestamp'\r\n                ]\r\n            },\r\n            TAG: {\r\n                NAME: 'tag',\r\n                COLUMNS: [\r\n                    'name'\r\n                ]\r\n            },\r\n            SUBSCRIPTION: {\r\n                NAME: 'subscription',\r\n                COLUMNS: [\r\n                    'name', 'description', 'post_limit', 'questionnaire_limit', 'comments_active', 'reactions_active', 'support', 'price'\r\n                ]\r\n            },\r\n            USER: {\r\n                NAME: 'user',\r\n                COLUMNS: [\r\n                   'subscription_id', 'type', 'email', 'username', 'first_name', 'last_name', 'address', 'city', 'country', 'zip_code', 'theme', 'timestamp'\r\n                ]\r\n            },\r\n            QUESTIONNAIRE_TAG: {\r\n                NAME: 'questionnaire_tag',\r\n                COLUMNS: [\r\n                    'tag_id', 'questionnaire_id', 'interest'\r\n                ]\r\n            },\r\n            QUESTION_TAG: {\r\n                NAME: 'question_tag',\r\n                COLUMNS: [\r\n                    'tag_id', 'question_id', 'interest'\r\n                ]\r\n            },\r\n            LINKAGE_TAG: {\r\n                NAME: 'linkage_tag',\r\n                COLUMNS: [\r\n                    'tag_id', 'linkage_id', 'interest'\r\n                ]\r\n            },\r\n            POST_TAG: {\r\n                NAME: 'post_tag',\r\n                COLUMNS: [\r\n                    'tag_id', 'post_id', 'interest'\r\n                ]\r\n            }\r\n        }\r\n    }\r\n} as const\r\n\r\n\r\nexport const QUERIES = {\r\n    QUESTIONNAIRE: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTIONNAIRE.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTIONNAIRE.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (priority: number, name: string): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTIONNAIRE.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTIONNAIRE.COLUMNS.join(', ')\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${priority}, '${name}') RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTIONNAIRE.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        GET_ALL_QUESTIONNAIRES_BY_USER_AND_ORDERED: (email: string): string => {\r\n            return `SELECT * FROM social_media_db.questionnaire q\r\n                    ORDER BY priority DESC\r\n                    LIMIT (\r\n                        SELECT s.questionnaire_limit FROM social_media_db.\"user\" u \r\n                        JOIN social_media_db.\"subscription\" s ON u.subscription_id = s.id WHERE u.email = '${email}'\r\n                    )`;\r\n        },\r\n        GET_ANSWERED_QUESTIONNAIRE_LIST: (email: string): string => {\r\n            return `SELECT * FROM social_media_db.questionnaire q2 WHERE q2.id IN (\r\n                        SELECT DISTINCT (questionnaire_id) \r\n                        FROM social_media_db.question q \r\n                        WHERE q.id IN (\r\n                            SELECT question_id \r\n                            FROM social_media_db.user_answer ua \r\n                            WHERE ua.user_internal_id  = (\r\n                                SELECT user_internal_id \r\n                                FROM social_media_db.USER \r\n                                WHERE email = '${email}'\r\n                            )\r\n                        )\r\n                    )`;\r\n        },\r\n    },\r\n    QUESTION: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTION.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTION.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        GET_BY_QUESTIONNAIRE_ID: (questionnaireId: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTION.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE questionnaire_id = ${questionnaireId};`;\r\n        },\r\n        ADD: (questionnaire_id: number, question_type: string, multiple_answers: boolean, title: string, description: string) => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTION.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTION.COLUMNS.join(', ')\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${questionnaire_id}, '${question_type}', ${multiple_answers}, '${title}', '${description}') RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTION.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    LINKAGE: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.LINKAGE.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.LINKAGE.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (first_question_id: number, second_question_id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.LINKAGE.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.LINKAGE.COLUMNS.join(', ')\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${first_question_id}, ${second_question_id}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.LINKAGE.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    ANSWER: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.ANSWER.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_ALL_BY_QUESTION_ID: (questionId: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.ANSWER.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE question_id = ${questionId};`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.ANSWER.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (question_id: number, priority: number, scale_value: number, text: string, image_url: string) => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.ANSWER.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.ANSWER.COLUMNS.join(', ')\r\n            let values = question_id + ', ' + priority + ', ' + scale_value + ', \\'' + text + '\\', \\'' + image_url + '\\'';\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.ANSWER.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    USER_ANSWER: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER_ANSWER.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER_ANSWER.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (user_internal_id: number, question_id: number, answer_id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER_ANSWER.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER_ANSWER.COLUMNS.join(', ')\r\n            let values = user_internal_id + ', ' + question_id + ', ' + answer_id + ', CURRENT_TIMESTAMP';\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER_ANSWER.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    POST: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_ALL_BY_CATEGORY_ID: (category_id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE post_category_id = ${category_id};`;\r\n        },\r\n        COUNT: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST.NAME;\r\n            return `SELECT COUNT(*) FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (user_internal_id: number, text: string, priority: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST.COLUMNS.join(', ')\r\n            let values = user_internal_id + ', \\'' + text + '\\', ' + priority + ', CURRENT_TIMESTAMP';\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        GET_ALL_BY_SUBSCRIPTION_AND_ORDERED: (email: string): string => {\r\n            return `SELECT p.id, p.post_category_id, p.user_internal_id, p.\"text\", p.priority, p.\"timestamp\" FROM social_media_db.post p\r\n                    ORDER BY priority DESC, \"timestamp\" DESC \r\n                    LIMIT (\r\n                        SELECT s.post_limit FROM social_media_db.\"user\" u \r\n                        JOIN social_media_db.\"subscription\" s ON u.subscription_id = s.id WHERE u.email = '${email}' LIMIT 1\r\n                    )`;\r\n        }\r\n    },\r\n    CATEGORY: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.CATEGORY.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        ADD: (text: string): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.CATEGORY.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.CATEGORY.COLUMNS.join(', ')\r\n            let values = '\\'' + text + '\\'';\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.CATEGORY.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    RESOURCE: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        GET_BY_POST_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE post_id = ${id};`;\r\n        },\r\n        ADD: (post_id: number, url: string, type: string): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.COLUMNS.join(', ')\r\n            let values = post_id + ', \\'' + url + '\\', \\'' + type + '\\', CURRENT_TIMESTAMP';\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    COMMENT: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.COMMENT.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.COMMENT.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        GET_BY_POST_ID: (post_id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.COMMENT.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE post_id = ${post_id};`;\r\n        },\r\n        ADD: (user_internal_id: number, post_id: number, text: string): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.COMMENT.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.COMMENT.COLUMNS.join(', ')\r\n            let values = user_internal_id + ', ' + post_id + ', \\'' + text + '\\', CURRENT_TIMESTAMP';\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.COMMENT.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    REACTION: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.REACTION.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.REACTION.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        GET_BY_POST_ID: (post_id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.REACTION.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE post_id = ${post_id};`;\r\n        },\r\n        ADD: (user_internal_id: number, post_id: number, reaction: string): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.REACTION.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.REACTION.COLUMNS.join(', ')\r\n            let values = user_internal_id + ', ' + post_id + ', \\'' + reaction + '\\', CURRENT_TIMESTAMP';\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.REACTION.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    TAG: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.TAG.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.TAG.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (name: string): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.TAG.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.COLUMNS.join(', ')\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES ('${name}') RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.TAG.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    SUBSCRIPTION: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.SUBSCRIPTION.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.SUBSCRIPTION.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (name: string, description: string, post_limit: number, questionnaire_limit: number, comments_active: boolean,\r\n              reactions_active: boolean, support: string, price: number) => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.SUBSCRIPTION.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.COLUMNS.join(', ')\r\n            let values = '\\'' + name + '\\', \\'' + description + '\\', ' + post_limit + ', ' + questionnaire_limit + ', '\r\n                + comments_active + ', ' + reactions_active + ', \\'' + support + '\\', ' + price;\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.TAG.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    USER: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_SHALLOW_USERS_BY_IDS: (ids: number[]): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER.NAME;\r\n            return `SELECT user_internal_id, first_name, last_name FROM ${schemaAndDatabaseName} WHERE id IN (${ids.join(',')})`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER.NAME;\r\n            let selectedColumns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER.COLUMNS.join(',')\r\n            return `SELECT ${selectedColumns} FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        CHANGE_SUBSCRIPTION: (subscription_id: number, user_email: string): string => {\r\n            return `UPDATE social_media_db.\"user\" u\r\n                    SET subscription_id = (SELECT id FROM social_media_db.\"subscription\" s WHERE id = ${subscription_id})\r\n                    WHERE u.email = '${user_email}';`;\r\n        },\r\n        GET_BY_EMAIL: (email: string): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE email = '${email}';`;\r\n        },\r\n        ADD: (subscription_id: number, type: string, email: string, username: string,\r\n              first_name: string, last_name: string, address: string, city: string,\r\n              country: string, zip_code: string, theme: string): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER.COLUMNS.join(', ')\r\n            let values = subscription_id + ', \\'' + type + '\\', \\'' + email + '\\', \\''\r\n                + username + '\\', \\'' + first_name + '\\', \\'' + last_name + '\\', \\'' + address + '\\', \\'' + city + '\\', \\''\r\n                + country + '\\', \\'' + zip_code + '\\', \\'' + theme + '\\', CURRENT_TIMESTAMP'\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        EDIT_DETAILS: (email: string, new_email: string, first_name: string, last_name: string, city: string, country: string, zip_code: string): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER.NAME;\r\n            return `UPDATE ${schemaAndDatabaseName} u\r\n                SET email = '${new_email}',  first_name = '${first_name}', last_name = '${last_name}', city = '${city}', country = '${country}', zip_code = '${zip_code}'\r\n                WHERE u.email = '${email}'`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.USER.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    QUESTIONNAIRE_TAG: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTIONNAIRE_TAG.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTIONNAIRE_TAG.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (tag_id: number, questionnaire_id: number, interest: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTIONNAIRE_TAG.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.COLUMNS.join(', ')\r\n            let values = tag_id + ', ' + questionnaire_id + ', ' + interest;\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTIONNAIRE_TAG.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    QUESTION_TAG: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTION_TAG.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTION_TAG.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (tag_id: number, question_id: number, interest: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTION_TAG.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.COLUMNS.join(', ')\r\n            let values = tag_id + ', ' + question_id + ', ' + interest;\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.QUESTION_TAG.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    LINKAGE_TAG: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.LINKAGE_TAG.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.LINKAGE_TAG.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (tag_id: number, linkage_id: number, interest: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.LINKAGE_TAG.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.LINKAGE_TAG.COLUMNS.join(', ')\r\n            let values = tag_id + ', ' + linkage_id + ', ' + interest;\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.LINKAGE_TAG.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    },\r\n    POST_TAG: {\r\n        GET_ALL: (): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST_TAG.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName}`;\r\n        },\r\n        GET_BY_ID: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST_TAG.NAME;\r\n            return `SELECT * FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        },\r\n        ADD: (tag_id: number, post_id: number, interest: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST_TAG.NAME;\r\n            let columns = SCHEMAS.SOCIAL_MEDIA_DB.TABLES.RESOURCE.COLUMNS.join(', ')\r\n            let values = tag_id + ', ' + post_id + ', ' + interest;\r\n            return `INSERT INTO ${schemaAndDatabaseName} (${columns}) VALUES (${values}) RETURNING id;`;\r\n        },\r\n        DELETE: (id: number): string => {\r\n            let schemaAndDatabaseName = SCHEMAS.SOCIAL_MEDIA_DB.NAME + '.' + SCHEMAS.SOCIAL_MEDIA_DB.TABLES.POST_TAG.NAME;\r\n            return `DELETE FROM ${schemaAndDatabaseName} WHERE id = ${id};`;\r\n        }\r\n    }\r\n};\r\n\r\nexport const MESSAGES = {\r\n    NOT_FOUND: {\r\n        status: 404,\r\n        QUESTIONNAIRE: 'QUESTIONNAIRE not found.',\r\n        QUESTION: 'QUESTION not found.',\r\n        LINKAGE: 'LINKAGE not found.',\r\n        ANSWER: 'ANSWER not found.',\r\n        USER_ANSWER: 'USER_ANSWER not found.',\r\n        USER: 'USER not found.',\r\n        POST: 'POST not found.',\r\n        CATEGORIES: 'CATEGORIES not found.',\r\n        RESOURCE: 'RESOURCE not found.',\r\n        COMMENT: 'COMMENT not found.',\r\n        REACTION: 'REACTION not found.',\r\n        TAG: 'TAG not found.',\r\n        QUESTIONNAIRE_TAG: 'QUESTIONNAIRE_TAG not found.',\r\n        QUESTION_TAG: 'QUESTION_TAG not found.',\r\n        LINKAGE_TAG: 'LINKAGE_TAG not found.',\r\n        POST_TAG: 'POST_TAG not found.',\r\n        SUBSCRIPTION: 'SUBSCRIPTION not found.'\r\n    },\r\n    SUCCESS: {\r\n        SUBSCRIPTION_UPDATED: 'Subscription plan updated successfully.'\r\n    }\r\n};\r\n","import * as QuestionnaireController from './Controllers/QuestionnaireController';\r\nimport * as DatabaseCreatorService from './Services/Database/DatabaseCreatorService';\r\nimport * as DatabaseService from './Services/Database/DatabaseService'\r\nimport * as MainLambda from './lambdas/handler';\r\nimport * as QuestionnaireLambda from './lambdas/questionnaireLambda';\r\n\r\nexport const Controllers = {\r\n    QuestionnaireController\r\n}\r\n\r\nexport const Services = {\r\n    DatabaseCreatorService,\r\n    DatabaseService\r\n}\r\n\r\nexport const Lambdas = {\r\n    MainLambda,\r\n    QuestionnaireLambda\r\n}\r\n","import {APIGatewayProxyEvent, APIGatewayProxyResult} from \"aws-lambda\";\r\nimport * as QuestionnaireController from \"../Controllers/QuestionnaireController\";\r\nimport * as DatabaseCreatorService from \"../Services/Database/DatabaseCreatorService\";\r\nimport * as PostService from \"../Services/PostService\";\r\nimport * as UserService from \"../Services/UserService\";\r\nimport * as SubscriptionService from \"../Services/SubscriptionService\";\r\nimport * as QuestionnaireService from \"../Services/QuestionnaireService\";\r\nimport * as Constants from \"../Utils/Constants\";\r\nimport {PostError} from \"../Services/PostService\";\r\n\r\nlet dbCreationChecked = false;\r\n\r\nasync function databaseCheckLogic(): Promise<void> {\r\n    if (!dbCreationChecked) {\r\n        await DatabaseCreatorService.createSchemaIfMissing();\r\n        dbCreationChecked = true;\r\n    }\r\n}\r\n\r\nexport async function hello(event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> {\r\n    await databaseCheckLogic();\r\n\r\n    console.log(event)\r\n    console.log(QuestionnaireController);\r\n\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify({message: 'data'})\r\n    }\r\n}\r\n\r\nexport async function getPosts(event: APIGatewayProxyEvent, params: any): Promise<APIGatewayProxyResult> {\r\n    let posts = await PostService.getComputedPostList(params.authorization.email)\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(posts)\r\n    }\r\n}\r\n\r\nexport async function getCategories(event: APIGatewayProxyEvent, params: any): Promise<APIGatewayProxyResult> {\r\n    let posts = await PostService.getCategories(params.authorization.email)\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(posts)\r\n    }\r\n}\r\n\r\nexport async function getPostsByCategoryId(event: APIGatewayProxyEvent, params: any): Promise<APIGatewayProxyResult> {\r\n    let posts = await PostService.getAllByCategoryId(params.authorization.email, params.categoryId)\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(posts)\r\n    }\r\n}\r\n\r\nexport async function reactionAddHandle(event: APIGatewayProxyEvent, params: any, body: any): Promise<APIGatewayProxyResult> {\r\n    let post_id = params.postId;\r\n    if (post_id != body.post_id) {\r\n        throw new PostError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.POST);\r\n    }\r\n    let response = await PostService.reactionAddHandle(post_id, body, params.authorization.email);\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(response)\r\n    }\r\n}\r\n\r\nexport async function reactionDeleteHandle(event: APIGatewayProxyEvent, params: any): Promise<APIGatewayProxyResult> {\r\n    let post_id = params.postId;\r\n    let reaction_id = params.reactionId;\r\n    let response = await PostService.reactionDeleteHandle(post_id, reaction_id);\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(response)\r\n    }\r\n}\r\n\r\nexport async function commentAddHandle(event: APIGatewayProxyEvent, params: any, body: any): Promise<APIGatewayProxyResult> {\r\n    let post_id = params.postId;\r\n    if (post_id != body.post_id) {\r\n        throw new PostError(Constants.MESSAGES.NOT_FOUND.status, Constants.MESSAGES.NOT_FOUND.POST);\r\n    }\r\n    let response = await PostService.commentAddHandle(post_id, body, params.authorization.email);\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(response)\r\n    }\r\n}\r\n\r\nexport async function commentDeleteHandle(event: APIGatewayProxyEvent, params: any): Promise<APIGatewayProxyResult> {\r\n    let post_id = params.postId;\r\n    let comment_id = params.commentId;\r\n    let response = await PostService.commentDeleteHandle(post_id, comment_id);\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(response)\r\n    }\r\n}\r\n\r\nexport async function getQuestionnaires(event: APIGatewayProxyEvent, params: any): Promise<object> {\r\n    let questionnaires = await QuestionnaireService.getComputedQuestionnaireList(params.authorization.email)\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(questionnaires)\r\n    }\r\n}\r\n\r\nexport async function addUserAnswers(event: APIGatewayProxyEvent, params: any, body: any): Promise<object> {\r\n    let response = await QuestionnaireService.addUserAnswers(params.questionnaireId, body, params.authorization.email)\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(response)\r\n    }\r\n}\r\n\r\nexport async function deleteQuestionnaire(event: APIGatewayProxyEvent, params: any): Promise<object> {\r\n    let response = await QuestionnaireService.deleteQuestionnaire(params.questionnaireId,  params.authorization.email)\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(response)\r\n    }\r\n}\r\n\r\nexport async function getSubscriptions(event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> {\r\n    let subscriptions = await SubscriptionService.getAll()\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(subscriptions)\r\n    }\r\n}\r\n\r\nexport async function getCurrentUser(event: APIGatewayProxyEvent, params: any): Promise<APIGatewayProxyResult> {\r\n    let user = await UserService.getCurrentUser(params.authorization.email)\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(user)\r\n    }\r\n}\r\n\r\nexport async function getUserContactInfo(event: APIGatewayProxyEvent, params: any): Promise<APIGatewayProxyResult> {\r\n    let user = await UserService.getById(params.userId)\r\n    let userContactInfo = {\r\n        email: user.email,\r\n        username: user.username,\r\n        first_name: user.first_name,\r\n        last_name: user.last_name,\r\n        address: user.address,\r\n        city: user.city\r\n    }\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(userContactInfo)\r\n    }\r\n}\r\n\r\nexport async function changeUserDetails(event: APIGatewayProxyEvent, params: any, body: any): Promise<APIGatewayProxyResult> {\r\n    let user = await UserService.changeUserDetails(params.authorization.email, body)\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(user)\r\n    }\r\n}\r\n\r\nexport async function changeSubscription(event: APIGatewayProxyEvent, params: any): Promise<APIGatewayProxyResult> {\r\n    let subscription_id = params.subscriptionId;\r\n    let user = await UserService.changeSubscription(subscription_id, params.authorization.email)\r\n    return {\r\n        statusCode: 200,\r\n        body: JSON.stringify(user)\r\n    }\r\n}\r\n","import {APIGatewayProxyEvent} from \"aws-lambda\";\r\nimport * as QuestionnaireController from \"../Controllers/QuestionnaireController\";\r\nimport * as DatabaseCreatorService from \"../Services/Database/DatabaseCreatorService\";\r\n\r\nlet dbCreationChecked = false;\r\n\r\nasync function databaseCheckLogic(): Promise<void> {\r\n    if (!dbCreationChecked) {\r\n        await DatabaseCreatorService.createSchemaIfMissing();\r\n        dbCreationChecked = true;\r\n    }\r\n}\r\n\r\nexport async function getAll(event: APIGatewayProxyEvent): Promise<object> {\r\n    await databaseCheckLogic();\r\n\r\n    let questionnaires = await QuestionnaireController.getAll()\r\n\r\n    return {\r\n        statusCode: 200,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*'\r\n        },\r\n        body: questionnaires\r\n    }\r\n}\r\n","'use strict'\n\nvar url = require('url')\nvar fs = require('fs')\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  //unix socket\n  if (str.charAt(0) === '/') {\n    var config = str.split(' ')\n    return { host: config[0], database: config[1] }\n  }\n\n  // url parse expects spaces encoded as %20\n  var result = url.parse(\n    / |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str) ? encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1') : str,\n    true\n  )\n  var config = result.query\n  for (var k in config) {\n    if (Array.isArray(config[k])) {\n      config[k] = config[k][config[k].length - 1]\n    }\n  }\n\n  var auth = (result.auth || ':').split(':')\n  config.user = auth[0]\n  config.password = auth.splice(1).join(':')\n\n  config.port = result.port\n  if (result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname)\n    config.database = result.query.db\n    config.client_encoding = result.query.encoding\n    return config\n  }\n  if (!config.host) {\n    // Only set the host if there is no equivalent query param.\n    config.host = result.hostname\n  }\n\n  // If the host is missing it might be a URL-encoded path to a socket.\n  var pathname = result.pathname\n  if (!config.host && pathname && /^%2f/i.test(pathname)) {\n    var pathnameSplit = pathname.split('/')\n    config.host = decodeURIComponent(pathnameSplit[0])\n    pathname = pathnameSplit.splice(1).join('/')\n  }\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = pathname.slice(1) || null\n  }\n  config.database = pathname && decodeURI(pathname)\n\n  if (config.ssl === 'true' || config.ssl === '1') {\n    config.ssl = true\n  }\n\n  if (config.ssl === '0') {\n    config.ssl = false\n  }\n\n  if (config.sslcert || config.sslkey || config.sslrootcert) {\n    config.ssl = {}\n  }\n\n  if (config.sslcert) {\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\n  }\n\n  if (config.sslkey) {\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\n  }\n\n  if (config.sslrootcert) {\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\n  }\n\n  return config\n}\n\nmodule.exports = parse\n\nparse.parse = parse\n","'use strict';\n\n// selected so (BASE - 1) * 0x100000000 + 0xffffffff is a safe integer\nvar BASE = 1000000;\n\nfunction readInt8(buffer) {\n\tvar high = buffer.readInt32BE(0);\n\tvar low = buffer.readUInt32BE(4);\n\tvar sign = '';\n\n\tif (high < 0) {\n\t\thigh = ~high + (low === 0);\n\t\tlow = (~low + 1) >>> 0;\n\t\tsign = '-';\n\t}\n\n\tvar result = '';\n\tvar carry;\n\tvar t;\n\tvar digits;\n\tvar pad;\n\tvar l;\n\tvar i;\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\tt = 0x100000000 * carry + low;\n\t\tdigits = '' + t % BASE;\n\n\t\treturn sign + digits + result;\n\t}\n}\n\nmodule.exports = readInt8;\n","'use strict'\nconst EventEmitter = require('events').EventEmitter\n\nconst NOOP = function () {}\n\nconst removeWhere = (list, predicate) => {\n  const i = list.findIndex(predicate)\n\n  return i === -1 ? undefined : list.splice(i, 1)[0]\n}\n\nclass IdleItem {\n  constructor(client, idleListener, timeoutId) {\n    this.client = client\n    this.idleListener = idleListener\n    this.timeoutId = timeoutId\n  }\n}\n\nclass PendingItem {\n  constructor(callback) {\n    this.callback = callback\n  }\n}\n\nfunction throwOnDoubleRelease() {\n  throw new Error('Release called on client which has already been released to the pool.')\n}\n\nfunction promisify(Promise, callback) {\n  if (callback) {\n    return { callback: callback, result: undefined }\n  }\n  let rej\n  let res\n  const cb = function (err, client) {\n    err ? rej(err) : res(client)\n  }\n  const result = new Promise(function (resolve, reject) {\n    res = resolve\n    rej = reject\n  })\n  return { callback: cb, result: result }\n}\n\nfunction makeIdleListener(pool, client) {\n  return function idleListener(err) {\n    err.client = client\n\n    client.removeListener('error', idleListener)\n    client.on('error', () => {\n      pool.log('additional client error after disconnection due to error', err)\n    })\n    pool._remove(client)\n    // TODO - document that once the pool emits an error\n    // the client has already been closed & purged and is unusable\n    pool.emit('error', err, client)\n  }\n}\n\nclass Pool extends EventEmitter {\n  constructor(options, Client) {\n    super()\n    this.options = Object.assign({}, options)\n\n    if (options != null && 'password' in options) {\n      // \"hiding\" the password so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options, 'password', {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: options.password,\n      })\n    }\n\n    this.options.max = this.options.max || this.options.poolSize || 10\n    this.options.maxUses = this.options.maxUses || Infinity\n    this.log = this.options.log || function () {}\n    this.Client = this.options.Client || Client || require('pg').Client\n    this.Promise = this.options.Promise || global.Promise\n\n    if (typeof this.options.idleTimeoutMillis === 'undefined') {\n      this.options.idleTimeoutMillis = 10000\n    }\n\n    this._clients = []\n    this._idle = []\n    this._pendingQueue = []\n    this._endCallback = undefined\n    this.ending = false\n    this.ended = false\n  }\n\n  _isFull() {\n    return this._clients.length >= this.options.max\n  }\n\n  _pulseQueue() {\n    this.log('pulse queue')\n    if (this.ended) {\n      this.log('pulse queue ended')\n      return\n    }\n    if (this.ending) {\n      this.log('pulse queue on ending')\n      if (this._idle.length) {\n        this._idle.slice().map((item) => {\n          this._remove(item.client)\n        })\n      }\n      if (!this._clients.length) {\n        this.ended = true\n        this._endCallback()\n      }\n      return\n    }\n    // if we don't have any waiting, do nothing\n    if (!this._pendingQueue.length) {\n      this.log('no queued requests')\n      return\n    }\n    // if we don't have any idle clients and we have no more room do nothing\n    if (!this._idle.length && this._isFull()) {\n      return\n    }\n    const pendingItem = this._pendingQueue.shift()\n    if (this._idle.length) {\n      const idleItem = this._idle.pop()\n      clearTimeout(idleItem.timeoutId)\n      const client = idleItem.client\n      const idleListener = idleItem.idleListener\n\n      return this._acquireClient(client, pendingItem, idleListener, false)\n    }\n    if (!this._isFull()) {\n      return this.newClient(pendingItem)\n    }\n    throw new Error('unexpected condition')\n  }\n\n  _remove(client) {\n    const removed = removeWhere(this._idle, (item) => item.client === client)\n\n    if (removed !== undefined) {\n      clearTimeout(removed.timeoutId)\n    }\n\n    this._clients = this._clients.filter((c) => c !== client)\n    client.end()\n    this.emit('remove', client)\n  }\n\n  connect(cb) {\n    if (this.ending) {\n      const err = new Error('Cannot use a pool after calling end on the pool')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n\n    const response = promisify(this.Promise, cb)\n    const result = response.result\n\n    // if we don't have to connect a new client, don't do so\n    if (this._clients.length >= this.options.max || this._idle.length) {\n      // if we have idle clients schedule a pulse immediately\n      if (this._idle.length) {\n        process.nextTick(() => this._pulseQueue())\n      }\n\n      if (!this.options.connectionTimeoutMillis) {\n        this._pendingQueue.push(new PendingItem(response.callback))\n        return result\n      }\n\n      const queueCallback = (err, res, done) => {\n        clearTimeout(tid)\n        response.callback(err, res, done)\n      }\n\n      const pendingItem = new PendingItem(queueCallback)\n\n      // set connection timeout on checking out an existing client\n      const tid = setTimeout(() => {\n        // remove the callback from pending waiters because\n        // we're going to call it with a timeout error\n        removeWhere(this._pendingQueue, (i) => i.callback === queueCallback)\n        pendingItem.timedOut = true\n        response.callback(new Error('timeout exceeded when trying to connect'))\n      }, this.options.connectionTimeoutMillis)\n\n      this._pendingQueue.push(pendingItem)\n      return result\n    }\n\n    this.newClient(new PendingItem(response.callback))\n\n    return result\n  }\n\n  newClient(pendingItem) {\n    const client = new this.Client(this.options)\n    this._clients.push(client)\n    const idleListener = makeIdleListener(this, client)\n\n    this.log('checking client timeout')\n\n    // connection timeout logic\n    let tid\n    let timeoutHit = false\n    if (this.options.connectionTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('ending client due to timeout')\n        timeoutHit = true\n        // force kill the node driver, and let libpq do its teardown\n        client.connection ? client.connection.stream.destroy() : client.end()\n      }, this.options.connectionTimeoutMillis)\n    }\n\n    this.log('connecting new client')\n    client.connect((err) => {\n      if (tid) {\n        clearTimeout(tid)\n      }\n      client.on('error', idleListener)\n      if (err) {\n        this.log('client failed to connect', err)\n        // remove the dead client from our list of clients\n        this._clients = this._clients.filter((c) => c !== client)\n        if (timeoutHit) {\n          err.message = 'Connection terminated due to connection timeout'\n        }\n\n        // this client won’t be released, so move on immediately\n        this._pulseQueue()\n\n        if (!pendingItem.timedOut) {\n          pendingItem.callback(err, undefined, NOOP)\n        }\n      } else {\n        this.log('new client connected')\n\n        return this._acquireClient(client, pendingItem, idleListener, true)\n      }\n    })\n  }\n\n  // acquire a client for a pending work item\n  _acquireClient(client, pendingItem, idleListener, isNew) {\n    if (isNew) {\n      this.emit('connect', client)\n    }\n\n    this.emit('acquire', client)\n\n    client.release = this._releaseOnce(client, idleListener)\n\n    client.removeListener('error', idleListener)\n\n    if (!pendingItem.timedOut) {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, (err) => {\n          if (err) {\n            client.release(err)\n            return pendingItem.callback(err, undefined, NOOP)\n          }\n\n          pendingItem.callback(undefined, client, client.release)\n        })\n      } else {\n        pendingItem.callback(undefined, client, client.release)\n      }\n    } else {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, client.release)\n      } else {\n        client.release()\n      }\n    }\n  }\n\n  // returns a function that wraps _release and throws if called more than once\n  _releaseOnce(client, idleListener) {\n    let released = false\n\n    return (err) => {\n      if (released) {\n        throwOnDoubleRelease()\n      }\n\n      released = true\n      this._release(client, idleListener, err)\n    }\n  }\n\n  // release a client back to the poll, include an error\n  // to remove it from the pool\n  _release(client, idleListener, err) {\n    client.on('error', idleListener)\n\n    client._poolUseCount = (client._poolUseCount || 0) + 1\n\n    // TODO(bmc): expose a proper, public interface _queryable and _ending\n    if (err || this.ending || !client._queryable || client._ending || client._poolUseCount >= this.options.maxUses) {\n      if (client._poolUseCount >= this.options.maxUses) {\n        this.log('remove expended client')\n      }\n      this._remove(client)\n      this._pulseQueue()\n      return\n    }\n\n    // idle timeout\n    let tid\n    if (this.options.idleTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('remove idle client')\n        this._remove(client)\n      }, this.options.idleTimeoutMillis)\n    }\n\n    this._idle.push(new IdleItem(client, idleListener, tid))\n    this._pulseQueue()\n  }\n\n  query(text, values, cb) {\n    // guard clause against passing a function as the first parameter\n    if (typeof text === 'function') {\n      const response = promisify(this.Promise, text)\n      setImmediate(function () {\n        return response.callback(new Error('Passing a function as the first parameter to pool.query is not supported'))\n      })\n      return response.result\n    }\n\n    // allow plain text query without values\n    if (typeof values === 'function') {\n      cb = values\n      values = undefined\n    }\n    const response = promisify(this.Promise, cb)\n    cb = response.callback\n\n    this.connect((err, client) => {\n      if (err) {\n        return cb(err)\n      }\n\n      let clientReleased = false\n      const onError = (err) => {\n        if (clientReleased) {\n          return\n        }\n        clientReleased = true\n        client.release(err)\n        cb(err)\n      }\n\n      client.once('error', onError)\n      this.log('dispatching query')\n      client.query(text, values, (err, res) => {\n        this.log('query dispatched')\n        client.removeListener('error', onError)\n        if (clientReleased) {\n          return\n        }\n        clientReleased = true\n        client.release(err)\n        if (err) {\n          return cb(err)\n        } else {\n          return cb(undefined, res)\n        }\n      })\n    })\n    return response.result\n  }\n\n  end(cb) {\n    this.log('ending')\n    if (this.ending) {\n      const err = new Error('Called end on pool more than once')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n    this.ending = true\n    const promised = promisify(this.Promise, cb)\n    this._endCallback = promised.callback\n    this._pulseQueue()\n    return promised.result\n  }\n\n  get waitingCount() {\n    return this._pendingQueue.length\n  }\n\n  get idleCount() {\n    return this._idle.length\n  }\n\n  get totalCount() {\n    return this._clients.length\n  }\n}\nmodule.exports = Pool\n","const emptyBuffer = Buffer.allocUnsafe(0)\n\nexport class BufferReader {\n  private buffer: Buffer = emptyBuffer\n\n  // TODO(bmc): support non-utf8 encoding?\n  private encoding: string = 'utf-8'\n\n  constructor(private offset: number = 0) {}\n\n  public setBuffer(offset: number, buffer: Buffer): void {\n    this.offset = offset\n    this.buffer = buffer\n  }\n\n  public int16(): number {\n    const result = this.buffer.readInt16BE(this.offset)\n    this.offset += 2\n    return result\n  }\n\n  public byte(): number {\n    const result = this.buffer[this.offset]\n    this.offset++\n    return result\n  }\n\n  public int32(): number {\n    const result = this.buffer.readInt32BE(this.offset)\n    this.offset += 4\n    return result\n  }\n\n  public string(length: number): string {\n    const result = this.buffer.toString(this.encoding, this.offset, this.offset + length)\n    this.offset += length\n    return result\n  }\n\n  public cstring(): string {\n    const start = this.offset\n    let end = start\n    while (this.buffer[end++] !== 0) {}\n    this.offset = end\n    return this.buffer.toString(this.encoding, start, end - 1)\n  }\n\n  public bytes(length: number): Buffer {\n    const result = this.buffer.slice(this.offset, this.offset + length)\n    this.offset += length\n    return result\n  }\n}\n","//binary data writer tuned for encoding binary specific to the postgres binary protocol\n\nexport class Writer {\n  private buffer: Buffer\n  private offset: number = 5\n  private headerPosition: number = 0\n  constructor(private size = 256) {\n    this.buffer = Buffer.alloc(size)\n  }\n\n  private ensure(size: number): void {\n    var remaining = this.buffer.length - this.offset\n    if (remaining < size) {\n      var oldBuffer = this.buffer\n      // exponential growth factor of around ~ 1.5\n      // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\n      var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size\n      this.buffer = Buffer.alloc(newSize)\n      oldBuffer.copy(this.buffer)\n    }\n  }\n\n  public addInt32(num: number): Writer {\n    this.ensure(4)\n    this.buffer[this.offset++] = (num >>> 24) & 0xff\n    this.buffer[this.offset++] = (num >>> 16) & 0xff\n    this.buffer[this.offset++] = (num >>> 8) & 0xff\n    this.buffer[this.offset++] = (num >>> 0) & 0xff\n    return this\n  }\n\n  public addInt16(num: number): Writer {\n    this.ensure(2)\n    this.buffer[this.offset++] = (num >>> 8) & 0xff\n    this.buffer[this.offset++] = (num >>> 0) & 0xff\n    return this\n  }\n\n  public addCString(string: string): Writer {\n    if (!string) {\n      this.ensure(1)\n    } else {\n      var len = Buffer.byteLength(string)\n      this.ensure(len + 1) // +1 for null terminator\n      this.buffer.write(string, this.offset, 'utf-8')\n      this.offset += len\n    }\n\n    this.buffer[this.offset++] = 0 // null terminator\n    return this\n  }\n\n  public addString(string: string = ''): Writer {\n    var len = Buffer.byteLength(string)\n    this.ensure(len)\n    this.buffer.write(string, this.offset)\n    this.offset += len\n    return this\n  }\n\n  public add(otherBuffer: Buffer): Writer {\n    this.ensure(otherBuffer.length)\n    otherBuffer.copy(this.buffer, this.offset)\n    this.offset += otherBuffer.length\n    return this\n  }\n\n  private join(code?: number): Buffer {\n    if (code) {\n      this.buffer[this.headerPosition] = code\n      //length is everything in this packet minus the code\n      const length = this.offset - (this.headerPosition + 1)\n      this.buffer.writeInt32BE(length, this.headerPosition + 1)\n    }\n    return this.buffer.slice(code ? 0 : 5, this.offset)\n  }\n\n  public flush(code?: number): Buffer {\n    var result = this.join(code)\n    this.offset = 5\n    this.headerPosition = 0\n    this.buffer = Buffer.allocUnsafe(this.size)\n    return result\n  }\n}\n","import { BackendMessage } from './messages'\nimport { serialize } from './serializer'\nimport { Parser, MessageCallback } from './parser'\n\nexport function parse(stream: NodeJS.ReadableStream, callback: MessageCallback): Promise<void> {\n  const parser = new Parser()\n  stream.on('data', (buffer: Buffer) => parser.parse(buffer, callback))\n  return new Promise((resolve) => stream.on('end', () => resolve()))\n}\n\nexport { serialize }\n","export type Mode = 'text' | 'binary'\n\nexport const enum MessageName {\n  parseComplete = 'parseComplete',\n  bindComplete = 'bindComplete',\n  closeComplete = 'closeComplete',\n  noData = 'noData',\n  portalSuspended = 'portalSuspended',\n  replicationStart = 'replicationStart',\n  emptyQuery = 'emptyQuery',\n  copyDone = 'copyDone',\n  copyData = 'copyData',\n  rowDescription = 'rowDescription',\n  parameterStatus = 'parameterStatus',\n  backendKeyData = 'backendKeyData',\n  notification = 'notification',\n  readyForQuery = 'readyForQuery',\n  commandComplete = 'commandComplete',\n  dataRow = 'dataRow',\n  copyInResponse = 'copyInResponse',\n  copyOutResponse = 'copyOutResponse',\n  authenticationOk = 'authenticationOk',\n  authenticationMD5Password = 'authenticationMD5Password',\n  authenticationCleartextPassword = 'authenticationCleartextPassword',\n  authenticationSASL = 'authenticationSASL',\n  authenticationSASLContinue = 'authenticationSASLContinue',\n  authenticationSASLFinal = 'authenticationSASLFinal',\n  error = 'error',\n  notice = 'notice',\n}\n\nexport interface BackendMessage {\n  name: MessageName\n  length: number\n}\n\nexport const parseComplete: BackendMessage = {\n  name: MessageName.parseComplete,\n  length: 5,\n}\n\nexport const bindComplete: BackendMessage = {\n  name: MessageName.bindComplete,\n  length: 5,\n}\n\nexport const closeComplete: BackendMessage = {\n  name: MessageName.closeComplete,\n  length: 5,\n}\n\nexport const noData: BackendMessage = {\n  name: MessageName.noData,\n  length: 5,\n}\n\nexport const portalSuspended: BackendMessage = {\n  name: MessageName.portalSuspended,\n  length: 5,\n}\n\nexport const replicationStart: BackendMessage = {\n  name: MessageName.replicationStart,\n  length: 4,\n}\n\nexport const emptyQuery: BackendMessage = {\n  name: MessageName.emptyQuery,\n  length: 4,\n}\n\nexport const copyDone: BackendMessage = {\n  name: MessageName.copyDone,\n  length: 4,\n}\n\ninterface NoticeOrError {\n  message: string | undefined\n  severity: string | undefined\n  code: string | undefined\n  detail: string | undefined\n  hint: string | undefined\n  position: string | undefined\n  internalPosition: string | undefined\n  internalQuery: string | undefined\n  where: string | undefined\n  schema: string | undefined\n  table: string | undefined\n  column: string | undefined\n  dataType: string | undefined\n  constraint: string | undefined\n  file: string | undefined\n  line: string | undefined\n  routine: string | undefined\n}\n\nexport class DatabaseError extends Error implements NoticeOrError {\n  public severity: string | undefined\n  public code: string | undefined\n  public detail: string | undefined\n  public hint: string | undefined\n  public position: string | undefined\n  public internalPosition: string | undefined\n  public internalQuery: string | undefined\n  public where: string | undefined\n  public schema: string | undefined\n  public table: string | undefined\n  public column: string | undefined\n  public dataType: string | undefined\n  public constraint: string | undefined\n  public file: string | undefined\n  public line: string | undefined\n  public routine: string | undefined\n  constructor(message: string, public readonly length: number, public readonly name: MessageName) {\n    super(message)\n  }\n}\n\nexport class CopyDataMessage {\n  public readonly name = MessageName.copyData\n  constructor(public readonly length: number, public readonly chunk: Buffer) {}\n}\n\nexport class CopyResponse {\n  public readonly columnTypes: number[]\n  constructor(\n    public readonly length: number,\n    public readonly name: MessageName,\n    public readonly binary: boolean,\n    columnCount: number\n  ) {\n    this.columnTypes = new Array(columnCount)\n  }\n}\n\nexport class Field {\n  constructor(\n    public readonly name: string,\n    public readonly tableID: number,\n    public readonly columnID: number,\n    public readonly dataTypeID: number,\n    public readonly dataTypeSize: number,\n    public readonly dataTypeModifier: number,\n    public readonly format: Mode\n  ) {}\n}\n\nexport class RowDescriptionMessage {\n  public readonly name: MessageName = MessageName.rowDescription\n  public readonly fields: Field[]\n  constructor(public readonly length: number, public readonly fieldCount: number) {\n    this.fields = new Array(this.fieldCount)\n  }\n}\n\nexport class ParameterStatusMessage {\n  public readonly name: MessageName = MessageName.parameterStatus\n  constructor(\n    public readonly length: number,\n    public readonly parameterName: string,\n    public readonly parameterValue: string\n  ) {}\n}\n\nexport class AuthenticationMD5Password implements BackendMessage {\n  public readonly name: MessageName = MessageName.authenticationMD5Password\n  constructor(public readonly length: number, public readonly salt: Buffer) {}\n}\n\nexport class BackendKeyDataMessage {\n  public readonly name: MessageName = MessageName.backendKeyData\n  constructor(public readonly length: number, public readonly processID: number, public readonly secretKey: number) {}\n}\n\nexport class NotificationResponseMessage {\n  public readonly name: MessageName = MessageName.notification\n  constructor(\n    public readonly length: number,\n    public readonly processId: number,\n    public readonly channel: string,\n    public readonly payload: string\n  ) {}\n}\n\nexport class ReadyForQueryMessage {\n  public readonly name: MessageName = MessageName.readyForQuery\n  constructor(public readonly length: number, public readonly status: string) {}\n}\n\nexport class CommandCompleteMessage {\n  public readonly name: MessageName = MessageName.commandComplete\n  constructor(public readonly length: number, public readonly text: string) {}\n}\n\nexport class DataRowMessage {\n  public readonly fieldCount: number\n  public readonly name: MessageName = MessageName.dataRow\n  constructor(public length: number, public fields: any[]) {\n    this.fieldCount = fields.length\n  }\n}\n\nexport class NoticeMessage implements BackendMessage, NoticeOrError {\n  constructor(public readonly length: number, public readonly message: string | undefined) {}\n  public readonly name = MessageName.notice\n  public severity: string | undefined\n  public code: string | undefined\n  public detail: string | undefined\n  public hint: string | undefined\n  public position: string | undefined\n  public internalPosition: string | undefined\n  public internalQuery: string | undefined\n  public where: string | undefined\n  public schema: string | undefined\n  public table: string | undefined\n  public column: string | undefined\n  public dataType: string | undefined\n  public constraint: string | undefined\n  public file: string | undefined\n  public line: string | undefined\n  public routine: string | undefined\n}\n","import { TransformOptions } from 'stream'\nimport {\n  Mode,\n  bindComplete,\n  parseComplete,\n  closeComplete,\n  noData,\n  portalSuspended,\n  copyDone,\n  replicationStart,\n  emptyQuery,\n  ReadyForQueryMessage,\n  CommandCompleteMessage,\n  CopyDataMessage,\n  CopyResponse,\n  NotificationResponseMessage,\n  RowDescriptionMessage,\n  Field,\n  DataRowMessage,\n  ParameterStatusMessage,\n  BackendKeyDataMessage,\n  DatabaseError,\n  BackendMessage,\n  MessageName,\n  AuthenticationMD5Password,\n  NoticeMessage,\n} from './messages'\nimport { BufferReader } from './buffer-reader'\nimport assert from 'assert'\n\n// every message is prefixed with a single bye\nconst CODE_LENGTH = 1\n// every message has an int32 length which includes itself but does\n// NOT include the code in the length\nconst LEN_LENGTH = 4\n\nconst HEADER_LENGTH = CODE_LENGTH + LEN_LENGTH\n\nexport type Packet = {\n  code: number\n  packet: Buffer\n}\n\nconst emptyBuffer = Buffer.allocUnsafe(0)\n\ntype StreamOptions = TransformOptions & {\n  mode: Mode\n}\n\nconst enum MessageCodes {\n  DataRow = 0x44, // D\n  ParseComplete = 0x31, // 1\n  BindComplete = 0x32, // 2\n  CloseComplete = 0x33, // 3\n  CommandComplete = 0x43, // C\n  ReadyForQuery = 0x5a, // Z\n  NoData = 0x6e, // n\n  NotificationResponse = 0x41, // A\n  AuthenticationResponse = 0x52, // R\n  ParameterStatus = 0x53, // S\n  BackendKeyData = 0x4b, // K\n  ErrorMessage = 0x45, // E\n  NoticeMessage = 0x4e, // N\n  RowDescriptionMessage = 0x54, // T\n  PortalSuspended = 0x73, // s\n  ReplicationStart = 0x57, // W\n  EmptyQuery = 0x49, // I\n  CopyIn = 0x47, // G\n  CopyOut = 0x48, // H\n  CopyDone = 0x63, // c\n  CopyData = 0x64, // d\n}\n\nexport type MessageCallback = (msg: BackendMessage) => void\n\nexport class Parser {\n  private buffer: Buffer = emptyBuffer\n  private bufferLength: number = 0\n  private bufferOffset: number = 0\n  private reader = new BufferReader()\n  private mode: Mode\n\n  constructor(opts?: StreamOptions) {\n    if (opts?.mode === 'binary') {\n      throw new Error('Binary mode not supported yet')\n    }\n    this.mode = opts?.mode || 'text'\n  }\n\n  public parse(buffer: Buffer, callback: MessageCallback) {\n    this.mergeBuffer(buffer)\n    const bufferFullLength = this.bufferOffset + this.bufferLength\n    let offset = this.bufferOffset\n    while (offset + HEADER_LENGTH <= bufferFullLength) {\n      // code is 1 byte long - it identifies the message type\n      const code = this.buffer[offset]\n      // length is 1 Uint32BE - it is the length of the message EXCLUDING the code\n      const length = this.buffer.readUInt32BE(offset + CODE_LENGTH)\n      const fullMessageLength = CODE_LENGTH + length\n      if (fullMessageLength + offset <= bufferFullLength) {\n        const message = this.handlePacket(offset + HEADER_LENGTH, code, length, this.buffer)\n        callback(message)\n        offset += fullMessageLength\n      } else {\n        break\n      }\n    }\n    if (offset === bufferFullLength) {\n      // No more use for the buffer\n      this.buffer = emptyBuffer\n      this.bufferLength = 0\n      this.bufferOffset = 0\n    } else {\n      // Adjust the cursors of remainingBuffer\n      this.bufferLength = bufferFullLength - offset\n      this.bufferOffset = offset\n    }\n  }\n\n  private mergeBuffer(buffer: Buffer): void {\n    if (this.bufferLength > 0) {\n      const newLength = this.bufferLength + buffer.byteLength\n      const newFullLength = newLength + this.bufferOffset\n      if (newFullLength > this.buffer.byteLength) {\n        // We can't concat the new buffer with the remaining one\n        let newBuffer: Buffer\n        if (newLength <= this.buffer.byteLength && this.bufferOffset >= this.bufferLength) {\n          // We can move the relevant part to the beginning of the buffer instead of allocating a new buffer\n          newBuffer = this.buffer\n        } else {\n          // Allocate a new larger buffer\n          let newBufferLength = this.buffer.byteLength * 2\n          while (newLength >= newBufferLength) {\n            newBufferLength *= 2\n          }\n          newBuffer = Buffer.allocUnsafe(newBufferLength)\n        }\n        // Move the remaining buffer to the new one\n        this.buffer.copy(newBuffer, 0, this.bufferOffset, this.bufferOffset + this.bufferLength)\n        this.buffer = newBuffer\n        this.bufferOffset = 0\n      }\n      // Concat the new buffer with the remaining one\n      buffer.copy(this.buffer, this.bufferOffset + this.bufferLength)\n      this.bufferLength = newLength\n    } else {\n      this.buffer = buffer\n      this.bufferOffset = 0\n      this.bufferLength = buffer.byteLength\n    }\n  }\n\n  private handlePacket(offset: number, code: number, length: number, bytes: Buffer): BackendMessage {\n    switch (code) {\n      case MessageCodes.BindComplete:\n        return bindComplete\n      case MessageCodes.ParseComplete:\n        return parseComplete\n      case MessageCodes.CloseComplete:\n        return closeComplete\n      case MessageCodes.NoData:\n        return noData\n      case MessageCodes.PortalSuspended:\n        return portalSuspended\n      case MessageCodes.CopyDone:\n        return copyDone\n      case MessageCodes.ReplicationStart:\n        return replicationStart\n      case MessageCodes.EmptyQuery:\n        return emptyQuery\n      case MessageCodes.DataRow:\n        return this.parseDataRowMessage(offset, length, bytes)\n      case MessageCodes.CommandComplete:\n        return this.parseCommandCompleteMessage(offset, length, bytes)\n      case MessageCodes.ReadyForQuery:\n        return this.parseReadyForQueryMessage(offset, length, bytes)\n      case MessageCodes.NotificationResponse:\n        return this.parseNotificationMessage(offset, length, bytes)\n      case MessageCodes.AuthenticationResponse:\n        return this.parseAuthenticationResponse(offset, length, bytes)\n      case MessageCodes.ParameterStatus:\n        return this.parseParameterStatusMessage(offset, length, bytes)\n      case MessageCodes.BackendKeyData:\n        return this.parseBackendKeyData(offset, length, bytes)\n      case MessageCodes.ErrorMessage:\n        return this.parseErrorMessage(offset, length, bytes, MessageName.error)\n      case MessageCodes.NoticeMessage:\n        return this.parseErrorMessage(offset, length, bytes, MessageName.notice)\n      case MessageCodes.RowDescriptionMessage:\n        return this.parseRowDescriptionMessage(offset, length, bytes)\n      case MessageCodes.CopyIn:\n        return this.parseCopyInMessage(offset, length, bytes)\n      case MessageCodes.CopyOut:\n        return this.parseCopyOutMessage(offset, length, bytes)\n      case MessageCodes.CopyData:\n        return this.parseCopyData(offset, length, bytes)\n      default:\n        assert.fail(`unknown message code: ${code.toString(16)}`)\n    }\n  }\n\n  private parseReadyForQueryMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const status = this.reader.string(1)\n    return new ReadyForQueryMessage(length, status)\n  }\n\n  private parseCommandCompleteMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const text = this.reader.cstring()\n    return new CommandCompleteMessage(length, text)\n  }\n\n  private parseCopyData(offset: number, length: number, bytes: Buffer) {\n    const chunk = bytes.slice(offset, offset + (length - 4))\n    return new CopyDataMessage(length, chunk)\n  }\n\n  private parseCopyInMessage(offset: number, length: number, bytes: Buffer) {\n    return this.parseCopyMessage(offset, length, bytes, MessageName.copyInResponse)\n  }\n\n  private parseCopyOutMessage(offset: number, length: number, bytes: Buffer) {\n    return this.parseCopyMessage(offset, length, bytes, MessageName.copyOutResponse)\n  }\n\n  private parseCopyMessage(offset: number, length: number, bytes: Buffer, messageName: MessageName) {\n    this.reader.setBuffer(offset, bytes)\n    const isBinary = this.reader.byte() !== 0\n    const columnCount = this.reader.int16()\n    const message = new CopyResponse(length, messageName, isBinary, columnCount)\n    for (let i = 0; i < columnCount; i++) {\n      message.columnTypes[i] = this.reader.int16()\n    }\n    return message\n  }\n\n  private parseNotificationMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const processId = this.reader.int32()\n    const channel = this.reader.cstring()\n    const payload = this.reader.cstring()\n    return new NotificationResponseMessage(length, processId, channel, payload)\n  }\n\n  private parseRowDescriptionMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const fieldCount = this.reader.int16()\n    const message = new RowDescriptionMessage(length, fieldCount)\n    for (let i = 0; i < fieldCount; i++) {\n      message.fields[i] = this.parseField()\n    }\n    return message\n  }\n\n  private parseField(): Field {\n    const name = this.reader.cstring()\n    const tableID = this.reader.int32()\n    const columnID = this.reader.int16()\n    const dataTypeID = this.reader.int32()\n    const dataTypeSize = this.reader.int16()\n    const dataTypeModifier = this.reader.int32()\n    const mode = this.reader.int16() === 0 ? 'text' : 'binary'\n    return new Field(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, mode)\n  }\n\n  private parseDataRowMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const fieldCount = this.reader.int16()\n    const fields: any[] = new Array(fieldCount)\n    for (let i = 0; i < fieldCount; i++) {\n      const len = this.reader.int32()\n      // a -1 for length means the value of the field is null\n      fields[i] = len === -1 ? null : this.reader.string(len)\n    }\n    return new DataRowMessage(length, fields)\n  }\n\n  private parseParameterStatusMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const name = this.reader.cstring()\n    const value = this.reader.cstring()\n    return new ParameterStatusMessage(length, name, value)\n  }\n\n  private parseBackendKeyData(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const processID = this.reader.int32()\n    const secretKey = this.reader.int32()\n    return new BackendKeyDataMessage(length, processID, secretKey)\n  }\n\n  public parseAuthenticationResponse(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const code = this.reader.int32()\n    // TODO(bmc): maybe better types here\n    const message: BackendMessage & any = {\n      name: MessageName.authenticationOk,\n      length,\n    }\n\n    switch (code) {\n      case 0: // AuthenticationOk\n        break\n      case 3: // AuthenticationCleartextPassword\n        if (message.length === 8) {\n          message.name = MessageName.authenticationCleartextPassword\n        }\n        break\n      case 5: // AuthenticationMD5Password\n        if (message.length === 12) {\n          message.name = MessageName.authenticationMD5Password\n          const salt = this.reader.bytes(4)\n          return new AuthenticationMD5Password(length, salt)\n        }\n        break\n      case 10: // AuthenticationSASL\n        message.name = MessageName.authenticationSASL\n        message.mechanisms = []\n        let mechanism: string\n        do {\n          mechanism = this.reader.cstring()\n\n          if (mechanism) {\n            message.mechanisms.push(mechanism)\n          }\n        } while (mechanism)\n        break\n      case 11: // AuthenticationSASLContinue\n        message.name = MessageName.authenticationSASLContinue\n        message.data = this.reader.string(length - 8)\n        break\n      case 12: // AuthenticationSASLFinal\n        message.name = MessageName.authenticationSASLFinal\n        message.data = this.reader.string(length - 8)\n        break\n      default:\n        throw new Error('Unknown authenticationOk message type ' + code)\n    }\n    return message\n  }\n\n  private parseErrorMessage(offset: number, length: number, bytes: Buffer, name: MessageName) {\n    this.reader.setBuffer(offset, bytes)\n    const fields: Record<string, string> = {}\n    let fieldType = this.reader.string(1)\n    while (fieldType !== '\\0') {\n      fields[fieldType] = this.reader.cstring()\n      fieldType = this.reader.string(1)\n    }\n\n    const messageValue = fields.M\n\n    const message =\n      name === MessageName.notice\n        ? new NoticeMessage(length, messageValue)\n        : new DatabaseError(messageValue, length, name)\n\n    message.severity = fields.S\n    message.code = fields.C\n    message.detail = fields.D\n    message.hint = fields.H\n    message.position = fields.P\n    message.internalPosition = fields.p\n    message.internalQuery = fields.q\n    message.where = fields.W\n    message.schema = fields.s\n    message.table = fields.t\n    message.column = fields.c\n    message.dataType = fields.d\n    message.constraint = fields.n\n    message.file = fields.F\n    message.line = fields.L\n    message.routine = fields.R\n    return message\n  }\n}\n","import { Writer } from './buffer-writer'\n\nconst enum code {\n  startup = 0x70,\n  query = 0x51,\n  parse = 0x50,\n  bind = 0x42,\n  execute = 0x45,\n  flush = 0x48,\n  sync = 0x53,\n  end = 0x58,\n  close = 0x43,\n  describe = 0x44,\n  copyFromChunk = 0x64,\n  copyDone = 0x63,\n  copyFail = 0x66,\n}\n\nconst writer = new Writer()\n\nconst startup = (opts: Record<string, string>): Buffer => {\n  // protocol version\n  writer.addInt16(3).addInt16(0)\n  for (const key of Object.keys(opts)) {\n    writer.addCString(key).addCString(opts[key])\n  }\n\n  writer.addCString('client_encoding').addCString('UTF8')\n\n  var bodyBuffer = writer.addCString('').flush()\n  // this message is sent without a code\n\n  var length = bodyBuffer.length + 4\n\n  return new Writer().addInt32(length).add(bodyBuffer).flush()\n}\n\nconst requestSsl = (): Buffer => {\n  const response = Buffer.allocUnsafe(8)\n  response.writeInt32BE(8, 0)\n  response.writeInt32BE(80877103, 4)\n  return response\n}\n\nconst password = (password: string): Buffer => {\n  return writer.addCString(password).flush(code.startup)\n}\n\nconst sendSASLInitialResponseMessage = function (mechanism: string, initialResponse: string): Buffer {\n  // 0x70 = 'p'\n  writer.addCString(mechanism).addInt32(Buffer.byteLength(initialResponse)).addString(initialResponse)\n\n  return writer.flush(code.startup)\n}\n\nconst sendSCRAMClientFinalMessage = function (additionalData: string): Buffer {\n  return writer.addString(additionalData).flush(code.startup)\n}\n\nconst query = (text: string): Buffer => {\n  return writer.addCString(text).flush(code.query)\n}\n\ntype ParseOpts = {\n  name?: string\n  types?: number[]\n  text: string\n}\n\nconst emptyArray: any[] = []\n\nconst parse = (query: ParseOpts): Buffer => {\n  // expect something like this:\n  // { name: 'queryName',\n  //   text: 'select * from blah',\n  //   types: ['int8', 'bool'] }\n\n  // normalize missing query names to allow for null\n  const name = query.name || ''\n  if (name.length > 63) {\n    /* eslint-disable no-console */\n    console.error('Warning! Postgres only supports 63 characters for query names.')\n    console.error('You supplied %s (%s)', name, name.length)\n    console.error('This can cause conflicts and silent errors executing queries')\n    /* eslint-enable no-console */\n  }\n\n  const types = query.types || emptyArray\n\n  var len = types.length\n\n  var buffer = writer\n    .addCString(name) // name of query\n    .addCString(query.text) // actual query text\n    .addInt16(len)\n\n  for (var i = 0; i < len; i++) {\n    buffer.addInt32(types[i])\n  }\n\n  return writer.flush(code.parse)\n}\n\ntype BindOpts = {\n  portal?: string\n  binary?: boolean\n  statement?: string\n  values?: any[]\n}\n\nconst bind = (config: BindOpts = {}): Buffer => {\n  // normalize config\n  const portal = config.portal || ''\n  const statement = config.statement || ''\n  const binary = config.binary || false\n  var values = config.values || emptyArray\n  var len = values.length\n\n  var useBinary = false\n  // TODO(bmc): all the loops in here aren't nice, we can do better\n  for (var j = 0; j < len; j++) {\n    useBinary = useBinary || values[j] instanceof Buffer\n  }\n\n  var buffer = writer.addCString(portal).addCString(statement)\n  if (!useBinary) {\n    buffer.addInt16(0)\n  } else {\n    buffer.addInt16(len)\n    for (j = 0; j < len; j++) {\n      buffer.addInt16(values[j] instanceof Buffer ? 1 : 0)\n    }\n  }\n  buffer.addInt16(len)\n  for (var i = 0; i < len; i++) {\n    var val = values[i]\n    if (val === null || typeof val === 'undefined') {\n      buffer.addInt32(-1)\n    } else if (val instanceof Buffer) {\n      buffer.addInt32(val.length)\n      buffer.add(val)\n    } else {\n      buffer.addInt32(Buffer.byteLength(val))\n      buffer.addString(val)\n    }\n  }\n\n  if (binary) {\n    buffer.addInt16(1) // format codes to use binary\n    buffer.addInt16(1)\n  } else {\n    buffer.addInt16(0) // format codes to use text\n  }\n  return writer.flush(code.bind)\n}\n\ntype ExecOpts = {\n  portal?: string\n  rows?: number\n}\n\nconst emptyExecute = Buffer.from([code.execute, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00])\n\nconst execute = (config?: ExecOpts): Buffer => {\n  // this is the happy path for most queries\n  if (!config || (!config.portal && !config.rows)) {\n    return emptyExecute\n  }\n\n  const portal = config.portal || ''\n  const rows = config.rows || 0\n\n  const portalLength = Buffer.byteLength(portal)\n  const len = 4 + portalLength + 1 + 4\n  // one extra bit for code\n  const buff = Buffer.allocUnsafe(1 + len)\n  buff[0] = code.execute\n  buff.writeInt32BE(len, 1)\n  buff.write(portal, 5, 'utf-8')\n  buff[portalLength + 5] = 0 // null terminate portal cString\n  buff.writeUInt32BE(rows, buff.length - 4)\n  return buff\n}\n\nconst cancel = (processID: number, secretKey: number): Buffer => {\n  const buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32BE(16, 0)\n  buffer.writeInt16BE(1234, 4)\n  buffer.writeInt16BE(5678, 6)\n  buffer.writeInt32BE(processID, 8)\n  buffer.writeInt32BE(secretKey, 12)\n  return buffer\n}\n\ntype PortalOpts = {\n  type: 'S' | 'P'\n  name?: string\n}\n\nconst cstringMessage = (code: code, string: string): Buffer => {\n  const stringLen = Buffer.byteLength(string)\n  const len = 4 + stringLen + 1\n  // one extra bit for code\n  const buffer = Buffer.allocUnsafe(1 + len)\n  buffer[0] = code\n  buffer.writeInt32BE(len, 1)\n  buffer.write(string, 5, 'utf-8')\n  buffer[len] = 0 // null terminate cString\n  return buffer\n}\n\nconst emptyDescribePortal = writer.addCString('P').flush(code.describe)\nconst emptyDescribeStatement = writer.addCString('S').flush(code.describe)\n\nconst describe = (msg: PortalOpts): Buffer => {\n  return msg.name\n    ? cstringMessage(code.describe, `${msg.type}${msg.name || ''}`)\n    : msg.type === 'P'\n    ? emptyDescribePortal\n    : emptyDescribeStatement\n}\n\nconst close = (msg: PortalOpts): Buffer => {\n  const text = `${msg.type}${msg.name || ''}`\n  return cstringMessage(code.close, text)\n}\n\nconst copyData = (chunk: Buffer): Buffer => {\n  return writer.add(chunk).flush(code.copyFromChunk)\n}\n\nconst copyFail = (message: string): Buffer => {\n  return cstringMessage(code.copyFail, message)\n}\n\nconst codeOnlyBuffer = (code: code): Buffer => Buffer.from([code, 0x00, 0x00, 0x00, 0x04])\n\nconst flushBuffer = codeOnlyBuffer(code.flush)\nconst syncBuffer = codeOnlyBuffer(code.sync)\nconst endBuffer = codeOnlyBuffer(code.end)\nconst copyDoneBuffer = codeOnlyBuffer(code.copyDone)\n\nconst serialize = {\n  startup,\n  password,\n  requestSsl,\n  sendSASLInitialResponseMessage,\n  sendSCRAMClientFinalMessage,\n  query,\n  parse,\n  bind,\n  execute,\n  describe,\n  close,\n  flush: () => flushBuffer,\n  sync: () => syncBuffer,\n  end: () => endBuffer,\n  copyData,\n  copyDone: () => copyDoneBuffer,\n  copyFail,\n  cancel,\n}\n\nexport { serialize }\n","var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\nvar builtinTypes = require('./lib/builtins');\n\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\nexports.builtins = builtinTypes;\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse (val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser (oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nfunction setTypeParser (oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n","var array = require('postgres-array');\n\nmodule.exports = {\n  create: function (source, transform) {\n    return {\n      parse: function() {\n        return array.parse(source, transform);\n      }\n    };\n  }\n};\n","var parseInt64 = require('pg-int8');\n\nvar parseBits = function(data, bits, offset, invert, callback) {\n  offset = offset || 0;\n  invert = invert || false;\n  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n  var offsetBytes = offset >> 3;\n\n  var inv = function(value) {\n    if (invert) {\n      return ~value & 0xff;\n    }\n\n    return value;\n  };\n\n  // read first (maybe partial) byte\n  var mask = 0xff;\n  var firstBits = 8 - (offset % 8);\n  if (bits < firstBits) {\n    mask = (0xff << (8 - bits)) & 0xff;\n    firstBits = bits;\n  }\n\n  if (offset) {\n    mask = mask >> (offset % 8);\n  }\n\n  var result = 0;\n  if ((offset % 8) + bits >= 8) {\n    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n  }\n\n  // read bytes\n  var bytes = (bits + offset) >> 3;\n  for (var i = offsetBytes + 1; i < bytes; i++) {\n    result = callback(result, inv(data[i]), 8);\n  }\n\n  // bits to read, that are not a complete byte\n  var lastBits = (bits + offset) % 8;\n  if (lastBits > 0) {\n    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n  }\n\n  return result;\n};\n\nvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n  var bias = Math.pow(2, exponentBits - 1) - 1;\n  var sign = parseBits(data, 1);\n  var exponent = parseBits(data, exponentBits, 1);\n\n  if (exponent === 0) {\n    return 0;\n  }\n\n  // parse mantissa\n  var precisionBitsCounter = 1;\n  var parsePrecisionBits = function(lastValue, newValue, bits) {\n    if (lastValue === 0) {\n      lastValue = 1;\n    }\n\n    for (var i = 1; i <= bits; i++) {\n      precisionBitsCounter /= 2;\n      if ((newValue & (0x1 << (bits - i))) > 0) {\n        lastValue += precisionBitsCounter;\n      }\n    }\n\n    return lastValue;\n  };\n\n  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\n  // special cases\n  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n    if (mantissa === 0) {\n      return (sign === 0) ? Infinity : -Infinity;\n    }\n\n    return NaN;\n  }\n\n  // normale number\n  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n};\n\nvar parseInt16 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 15, 1, true) + 1);\n  }\n\n  return parseBits(value, 15, 1);\n};\n\nvar parseInt32 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 31, 1, true) + 1);\n  }\n\n  return parseBits(value, 31, 1);\n};\n\nvar parseFloat32 = function(value) {\n  return parseFloatFromBits(value, 23, 8);\n};\n\nvar parseFloat64 = function(value) {\n  return parseFloatFromBits(value, 52, 11);\n};\n\nvar parseNumeric = function(value) {\n  var sign = parseBits(value, 16, 32);\n  if (sign == 0xc000) {\n    return NaN;\n  }\n\n  var weight = Math.pow(10000, parseBits(value, 16, 16));\n  var result = 0;\n\n  var digits = [];\n  var ndigits = parseBits(value, 16);\n  for (var i = 0; i < ndigits; i++) {\n    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n    weight /= 10000;\n  }\n\n  var scale = Math.pow(10, parseBits(value, 16, 48));\n  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n};\n\nvar parseDate = function(isUTC, value) {\n  var sign = parseBits(value, 1);\n  var rawValue = parseBits(value, 63, 1);\n\n  // discard usecs and shift from 2000 to 1970\n  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\n  if (!isUTC) {\n    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n  }\n\n  // add microseconds to the date\n  result.usec = rawValue % 1000;\n  result.getMicroSeconds = function() {\n    return this.usec;\n  };\n  result.setMicroSeconds = function(value) {\n    this.usec = value;\n  };\n  result.getUTCMicroSeconds = function() {\n    return this.usec;\n  };\n\n  return result;\n};\n\nvar parseArray = function(value) {\n  var dim = parseBits(value, 32);\n\n  var flags = parseBits(value, 32, 32);\n  var elementType = parseBits(value, 32, 64);\n\n  var offset = 96;\n  var dims = [];\n  for (var i = 0; i < dim; i++) {\n    // parse dimension\n    dims[i] = parseBits(value, 32, offset);\n    offset += 32;\n\n    // ignore lower bounds\n    offset += 32;\n  }\n\n  var parseElement = function(elementType) {\n    // parse content length\n    var length = parseBits(value, 32, offset);\n    offset += 32;\n\n    // parse null values\n    if (length == 0xffffffff) {\n      return null;\n    }\n\n    var result;\n    if ((elementType == 0x17) || (elementType == 0x14)) {\n      // int/bigint\n      result = parseBits(value, length * 8, offset);\n      offset += length * 8;\n      return result;\n    }\n    else if (elementType == 0x19) {\n      // string\n      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n      return result;\n    }\n    else {\n      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n    }\n  };\n\n  var parse = function(dimension, elementType) {\n    var array = [];\n    var i;\n\n    if (dimension.length > 1) {\n      var count = dimension.shift();\n      for (i = 0; i < count; i++) {\n        array[i] = parse(dimension, elementType);\n      }\n      dimension.unshift(count);\n    }\n    else {\n      for (i = 0; i < dimension[0]; i++) {\n        array[i] = parseElement(elementType);\n      }\n    }\n\n    return array;\n  };\n\n  return parse(dims, elementType);\n};\n\nvar parseText = function(value) {\n  return value.toString('utf8');\n};\n\nvar parseBool = function(value) {\n  if(value === null) return null;\n  return (parseBits(value, 8) > 0);\n};\n\nvar init = function(register) {\n  register(20, parseInt64);\n  register(21, parseInt16);\n  register(23, parseInt32);\n  register(26, parseInt32);\n  register(1700, parseNumeric);\n  register(700, parseFloat32);\n  register(701, parseFloat64);\n  register(16, parseBool);\n  register(1114, parseDate.bind(null, false));\n  register(1184, parseDate.bind(null, true));\n  register(1000, parseArray);\n  register(1007, parseArray);\n  register(1016, parseArray);\n  register(1008, parseArray);\n  register(1009, parseArray);\n  register(25, parseText);\n};\n\nmodule.exports = {\n  init: init\n};\n","/**\n * Following query was used to generate this file:\n\n SELECT json_object_agg(UPPER(PT.typname), PT.oid::int4 ORDER BY pt.oid)\n FROM pg_type PT\n WHERE typnamespace = (SELECT pgn.oid FROM pg_namespace pgn WHERE nspname = 'pg_catalog') -- Take only builting Postgres types with stable OID (extension types are not guaranted to be stable)\n AND typtype = 'b' -- Only basic types\n AND typelem = 0 -- Ignore aliases\n AND typisdefined -- Ignore undefined types\n */\n\nmodule.exports = {\n    BOOL: 16,\n    BYTEA: 17,\n    CHAR: 18,\n    INT8: 20,\n    INT2: 21,\n    INT4: 23,\n    REGPROC: 24,\n    TEXT: 25,\n    OID: 26,\n    TID: 27,\n    XID: 28,\n    CID: 29,\n    JSON: 114,\n    XML: 142,\n    PG_NODE_TREE: 194,\n    SMGR: 210,\n    PATH: 602,\n    POLYGON: 604,\n    CIDR: 650,\n    FLOAT4: 700,\n    FLOAT8: 701,\n    ABSTIME: 702,\n    RELTIME: 703,\n    TINTERVAL: 704,\n    CIRCLE: 718,\n    MACADDR8: 774,\n    MONEY: 790,\n    MACADDR: 829,\n    INET: 869,\n    ACLITEM: 1033,\n    BPCHAR: 1042,\n    VARCHAR: 1043,\n    DATE: 1082,\n    TIME: 1083,\n    TIMESTAMP: 1114,\n    TIMESTAMPTZ: 1184,\n    INTERVAL: 1186,\n    TIMETZ: 1266,\n    BIT: 1560,\n    VARBIT: 1562,\n    NUMERIC: 1700,\n    REFCURSOR: 1790,\n    REGPROCEDURE: 2202,\n    REGOPER: 2203,\n    REGOPERATOR: 2204,\n    REGCLASS: 2205,\n    REGTYPE: 2206,\n    UUID: 2950,\n    TXID_SNAPSHOT: 2970,\n    PG_LSN: 3220,\n    PG_NDISTINCT: 3361,\n    PG_DEPENDENCIES: 3402,\n    TSVECTOR: 3614,\n    TSQUERY: 3615,\n    GTSVECTOR: 3642,\n    REGCONFIG: 3734,\n    REGDICTIONARY: 3769,\n    JSONB: 3802,\n    REGNAMESPACE: 4089,\n    REGROLE: 4096\n};\n","var array = require('postgres-array')\nvar arrayParser = require('./arrayParser');\nvar parseDate = require('postgres-date');\nvar parseInterval = require('postgres-interval');\nvar parseByteA = require('postgres-bytea');\n\nfunction allowNull (fn) {\n  return function nullAllowed (value) {\n    if (value === null) return value\n    return fn(value)\n  }\n}\n\nfunction parseBool (value) {\n  if (value === null) return value\n  return value === 'TRUE' ||\n    value === 't' ||\n    value === 'true' ||\n    value === 'y' ||\n    value === 'yes' ||\n    value === 'on' ||\n    value === '1';\n}\n\nfunction parseBoolArray (value) {\n  if (!value) return null\n  return array.parse(value, parseBool)\n}\n\nfunction parseBaseTenInt (string) {\n  return parseInt(string, 10)\n}\n\nfunction parseIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(parseBaseTenInt))\n}\n\nfunction parseBigIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(function (entry) {\n    return parseBigInteger(entry).trim()\n  }))\n}\n\nvar parsePointArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parsePoint(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseFloatArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parseFloat(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseStringArray = function(value) {\n  if(!value) { return null; }\n\n  var p = arrayParser.create(value);\n  return p.parse();\n};\n\nvar parseDateArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseDate(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseIntervalArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseInterval(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseByteAArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(parseByteA));\n};\n\nvar parseInteger = function(value) {\n  return parseInt(value, 10);\n};\n\nvar parseBigInteger = function(value) {\n  var valStr = String(value);\n  if (/^\\d+$/.test(valStr)) { return valStr; }\n  return value;\n};\n\nvar parseJsonArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(JSON.parse));\n};\n\nvar parsePoint = function(value) {\n  if (value[0] !== '(') { return null; }\n\n  value = value.substring( 1, value.length - 1 ).split(',');\n\n  return {\n    x: parseFloat(value[0])\n  , y: parseFloat(value[1])\n  };\n};\n\nvar parseCircle = function(value) {\n  if (value[0] !== '<' && value[1] !== '(') { return null; }\n\n  var point = '(';\n  var radius = '';\n  var pointParsed = false;\n  for (var i = 2; i < value.length - 1; i++){\n    if (!pointParsed) {\n      point += value[i];\n    }\n\n    if (value[i] === ')') {\n      pointParsed = true;\n      continue;\n    } else if (!pointParsed) {\n      continue;\n    }\n\n    if (value[i] === ','){\n      continue;\n    }\n\n    radius += value[i];\n  }\n  var result = parsePoint(point);\n  result.radius = parseFloat(radius);\n\n  return result;\n};\n\nvar init = function(register) {\n  register(20, parseBigInteger); // int8\n  register(21, parseInteger); // int2\n  register(23, parseInteger); // int4\n  register(26, parseInteger); // oid\n  register(700, parseFloat); // float4/real\n  register(701, parseFloat); // float8/double\n  register(16, parseBool);\n  register(1082, parseDate); // date\n  register(1114, parseDate); // timestamp without timezone\n  register(1184, parseDate); // timestamp\n  register(600, parsePoint); // point\n  register(651, parseStringArray); // cidr[]\n  register(718, parseCircle); // circle\n  register(1000, parseBoolArray);\n  register(1001, parseByteAArray);\n  register(1005, parseIntegerArray); // _int2\n  register(1007, parseIntegerArray); // _int4\n  register(1028, parseIntegerArray); // oid[]\n  register(1016, parseBigIntegerArray); // _int8\n  register(1017, parsePointArray); // point[]\n  register(1021, parseFloatArray); // _float4\n  register(1022, parseFloatArray); // _float8\n  register(1231, parseFloatArray); // _numeric\n  register(1014, parseStringArray); //char\n  register(1015, parseStringArray); //varchar\n  register(1008, parseStringArray);\n  register(1009, parseStringArray);\n  register(1040, parseStringArray); // macaddr[]\n  register(1041, parseStringArray); // inet[]\n  register(1115, parseDateArray); // timestamp without time zone[]\n  register(1182, parseDateArray); // _date\n  register(1185, parseDateArray); // timestamp with time zone[]\n  register(1186, parseInterval);\n  register(1187, parseIntervalArray);\n  register(17, parseByteA);\n  register(114, JSON.parse.bind(JSON)); // json\n  register(3802, JSON.parse.bind(JSON)); // jsonb\n  register(199, parseJsonArray); // json[]\n  register(3807, parseJsonArray); // jsonb[]\n  register(3907, parseStringArray); // numrange[]\n  register(2951, parseStringArray); // uuid[]\n  register(791, parseStringArray); // money[]\n  register(1183, parseStringArray); // time[]\n  register(1270, parseStringArray); // timetz[]\n};\n\nmodule.exports = {\n  init: init\n};\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('./utils')\nvar sasl = require('./sasl')\nvar pgPass = require('pgpass')\nvar TypeOverrides = require('./type-overrides')\n\nvar ConnectionParameters = require('./connection-parameters')\nvar Query = require('./query')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\n\nclass Client extends EventEmitter {\n  constructor(config) {\n    super()\n\n    this.connectionParameters = new ConnectionParameters(config)\n    this.user = this.connectionParameters.user\n    this.database = this.connectionParameters.database\n    this.port = this.connectionParameters.port\n    this.host = this.connectionParameters.host\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: this.connectionParameters.password,\n    })\n\n    this.replication = this.connectionParameters.replication\n\n    var c = config || {}\n\n    this._Promise = c.Promise || global.Promise\n    this._types = new TypeOverrides(c.types)\n    this._ending = false\n    this._connecting = false\n    this._connected = false\n    this._connectionError = false\n    this._queryable = true\n\n    this.connection =\n      c.connection ||\n      new Connection({\n        stream: c.stream,\n        ssl: this.connectionParameters.ssl,\n        keepAlive: c.keepAlive || false,\n        keepAliveInitialDelayMillis: c.keepAliveInitialDelayMillis || 0,\n        encoding: this.connectionParameters.client_encoding || 'utf8',\n      })\n    this.queryQueue = []\n    this.binary = c.binary || defaults.binary\n    this.processID = null\n    this.secretKey = null\n    this.ssl = this.connectionParameters.ssl || false\n    this._connectionTimeoutMillis = c.connectionTimeoutMillis || 0\n  }\n\n  _errorAllQueries(err) {\n    const enqueueError = (query) => {\n      process.nextTick(() => {\n        query.handleError(err, this.connection)\n      })\n    }\n\n    if (this.activeQuery) {\n      enqueueError(this.activeQuery)\n      this.activeQuery = null\n    }\n\n    this.queryQueue.forEach(enqueueError)\n    this.queryQueue.length = 0\n  }\n\n  _connect(callback) {\n    var self = this\n    var con = this.connection\n    this._connectionCallback = callback\n\n    if (this._connecting || this._connected) {\n      const err = new Error('Client has already been connected. You cannot reuse a client.')\n      process.nextTick(() => {\n        callback(err)\n      })\n      return\n    }\n    this._connecting = true\n\n    this.connectionTimeoutHandle\n    if (this._connectionTimeoutMillis > 0) {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        con._ending = true\n        con.stream.destroy(new Error('timeout expired'))\n      }, this._connectionTimeoutMillis)\n    }\n\n    if (this.host && this.host.indexOf('/') === 0) {\n      con.connect(this.host + '/.s.PGSQL.' + this.port)\n    } else {\n      con.connect(this.port, this.host)\n    }\n\n    // once connection is established send startup message\n    con.on('connect', function () {\n      if (self.ssl) {\n        con.requestSsl()\n      } else {\n        con.startup(self.getStartupConf())\n      }\n    })\n\n    con.on('sslconnect', function () {\n      con.startup(self.getStartupConf())\n    })\n\n    this._attachListeners(con)\n\n    con.once('end', () => {\n      const error = this._ending ? new Error('Connection terminated') : new Error('Connection terminated unexpectedly')\n\n      clearTimeout(this.connectionTimeoutHandle)\n      this._errorAllQueries(error)\n\n      if (!this._ending) {\n        // if the connection is ended without us calling .end()\n        // on this client then we have an unexpected disconnection\n        // treat this as an error unless we've already emitted an error\n        // during connection.\n        if (this._connecting && !this._connectionError) {\n          if (this._connectionCallback) {\n            this._connectionCallback(error)\n          } else {\n            this._handleErrorEvent(error)\n          }\n        } else if (!this._connectionError) {\n          this._handleErrorEvent(error)\n        }\n      }\n\n      process.nextTick(() => {\n        this.emit('end')\n      })\n    })\n  }\n\n  connect(callback) {\n    if (callback) {\n      this._connect(callback)\n      return\n    }\n\n    return new this._Promise((resolve, reject) => {\n      this._connect((error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  _attachListeners(con) {\n    // password request handling\n    con.on('authenticationCleartextPassword', this._handleAuthCleartextPassword.bind(this))\n    // password request handling\n    con.on('authenticationMD5Password', this._handleAuthMD5Password.bind(this))\n    // password request handling (SASL)\n    con.on('authenticationSASL', this._handleAuthSASL.bind(this))\n    con.on('authenticationSASLContinue', this._handleAuthSASLContinue.bind(this))\n    con.on('authenticationSASLFinal', this._handleAuthSASLFinal.bind(this))\n    con.on('backendKeyData', this._handleBackendKeyData.bind(this))\n    con.on('error', this._handleErrorEvent.bind(this))\n    con.on('errorMessage', this._handleErrorMessage.bind(this))\n    con.on('readyForQuery', this._handleReadyForQuery.bind(this))\n    con.on('notice', this._handleNotice.bind(this))\n    con.on('rowDescription', this._handleRowDescription.bind(this))\n    con.on('dataRow', this._handleDataRow.bind(this))\n    con.on('portalSuspended', this._handlePortalSuspended.bind(this))\n    con.on('emptyQuery', this._handleEmptyQuery.bind(this))\n    con.on('commandComplete', this._handleCommandComplete.bind(this))\n    con.on('parseComplete', this._handleParseComplete.bind(this))\n    con.on('copyInResponse', this._handleCopyInResponse.bind(this))\n    con.on('copyData', this._handleCopyData.bind(this))\n    con.on('notification', this._handleNotification.bind(this))\n  }\n\n  // TODO(bmc): deprecate pgpass \"built in\" integration since this.password can be a function\n  // it can be supplied by the user if required - this is a breaking change!\n  _checkPgPass(cb) {\n    const con = this.connection\n    if (typeof this.password === 'function') {\n      this._Promise\n        .resolve()\n        .then(() => this.password())\n        .then((pass) => {\n          if (pass !== undefined) {\n            if (typeof pass !== 'string') {\n              con.emit('error', new TypeError('Password must be a string'))\n              return\n            }\n            this.connectionParameters.password = this.password = pass\n          } else {\n            this.connectionParameters.password = this.password = null\n          }\n          cb()\n        })\n        .catch((err) => {\n          con.emit('error', err)\n        })\n    } else if (this.password !== null) {\n      cb()\n    } else {\n      pgPass(this.connectionParameters, (pass) => {\n        if (undefined !== pass) {\n          this.connectionParameters.password = this.password = pass\n        }\n        cb()\n      })\n    }\n  }\n\n  _handleAuthCleartextPassword(msg) {\n    this._checkPgPass(() => {\n      this.connection.password(this.password)\n    })\n  }\n\n  _handleAuthMD5Password(msg) {\n    this._checkPgPass(() => {\n      const hashedPassword = utils.postgresMd5PasswordHash(this.user, this.password, msg.salt)\n      this.connection.password(hashedPassword)\n    })\n  }\n\n  _handleAuthSASL(msg) {\n    this._checkPgPass(() => {\n      this.saslSession = sasl.startSession(msg.mechanisms)\n      this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response)\n    })\n  }\n\n  _handleAuthSASLContinue(msg) {\n    sasl.continueSession(this.saslSession, this.password, msg.data)\n    this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)\n  }\n\n  _handleAuthSASLFinal(msg) {\n    sasl.finalizeSession(this.saslSession, msg.data)\n    this.saslSession = null\n  }\n\n  _handleBackendKeyData(msg) {\n    this.processID = msg.processID\n    this.secretKey = msg.secretKey\n  }\n\n  _handleReadyForQuery(msg) {\n    if (this._connecting) {\n      this._connecting = false\n      this._connected = true\n      clearTimeout(this.connectionTimeoutHandle)\n\n      // process possible callback argument to Client#connect\n      if (this._connectionCallback) {\n        this._connectionCallback(null, this)\n        // remove callback for proper error handling\n        // after the connect event\n        this._connectionCallback = null\n      }\n      this.emit('connect')\n    }\n    const { activeQuery } = this\n    this.activeQuery = null\n    this.readyForQuery = true\n    if (activeQuery) {\n      activeQuery.handleReadyForQuery(this.connection)\n    }\n    this._pulseQueryQueue()\n  }\n\n  // if we receieve an error event or error message\n  // during the connection process we handle it here\n  _handleErrorWhileConnecting(err) {\n    if (this._connectionError) {\n      // TODO(bmc): this is swallowing errors - we shouldn't do this\n      return\n    }\n    this._connectionError = true\n    clearTimeout(this.connectionTimeoutHandle)\n    if (this._connectionCallback) {\n      return this._connectionCallback(err)\n    }\n    this.emit('error', err)\n  }\n\n  // if we're connected and we receive an error event from the connection\n  // this means the socket is dead - do a hard abort of all queries and emit\n  // the socket error on the client as well\n  _handleErrorEvent(err) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(err)\n    }\n    this._queryable = false\n    this._errorAllQueries(err)\n    this.emit('error', err)\n  }\n\n  // handle error messages from the postgres backend\n  _handleErrorMessage(msg) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(msg)\n    }\n    const activeQuery = this.activeQuery\n\n    if (!activeQuery) {\n      this._handleErrorEvent(msg)\n      return\n    }\n\n    this.activeQuery = null\n    activeQuery.handleError(msg, this.connection)\n  }\n\n  _handleRowDescription(msg) {\n    // delegate rowDescription to active query\n    this.activeQuery.handleRowDescription(msg)\n  }\n\n  _handleDataRow(msg) {\n    // delegate dataRow to active query\n    this.activeQuery.handleDataRow(msg)\n  }\n\n  _handlePortalSuspended(msg) {\n    // delegate portalSuspended to active query\n    this.activeQuery.handlePortalSuspended(this.connection)\n  }\n\n  _handleEmptyQuery(msg) {\n    // delegate emptyQuery to active query\n    this.activeQuery.handleEmptyQuery(this.connection)\n  }\n\n  _handleCommandComplete(msg) {\n    // delegate commandComplete to active query\n    this.activeQuery.handleCommandComplete(msg, this.connection)\n  }\n\n  _handleParseComplete(msg) {\n    // if a prepared statement has a name and properly parses\n    // we track that its already been executed so we don't parse\n    // it again on the same client\n    if (this.activeQuery.name) {\n      this.connection.parsedStatements[this.activeQuery.name] = this.activeQuery.text\n    }\n  }\n\n  _handleCopyInResponse(msg) {\n    this.activeQuery.handleCopyInResponse(this.connection)\n  }\n\n  _handleCopyData(msg) {\n    this.activeQuery.handleCopyData(msg, this.connection)\n  }\n\n  _handleNotification(msg) {\n    this.emit('notification', msg)\n  }\n\n  _handleNotice(msg) {\n    this.emit('notice', msg)\n  }\n\n  getStartupConf() {\n    var params = this.connectionParameters\n\n    var data = {\n      user: params.user,\n      database: params.database,\n    }\n\n    var appName = params.application_name || params.fallback_application_name\n    if (appName) {\n      data.application_name = appName\n    }\n    if (params.replication) {\n      data.replication = '' + params.replication\n    }\n    if (params.statement_timeout) {\n      data.statement_timeout = String(parseInt(params.statement_timeout, 10))\n    }\n    if (params.idle_in_transaction_session_timeout) {\n      data.idle_in_transaction_session_timeout = String(parseInt(params.idle_in_transaction_session_timeout, 10))\n    }\n    if (params.options) {\n      data.options = params.options\n    }\n\n    return data\n  }\n\n  cancel(client, query) {\n    if (client.activeQuery === query) {\n      var con = this.connection\n\n      if (this.host && this.host.indexOf('/') === 0) {\n        con.connect(this.host + '/.s.PGSQL.' + this.port)\n      } else {\n        con.connect(this.port, this.host)\n      }\n\n      // once connection is established send cancel message\n      con.on('connect', function () {\n        con.cancel(client.processID, client.secretKey)\n      })\n    } else if (client.queryQueue.indexOf(query) !== -1) {\n      client.queryQueue.splice(client.queryQueue.indexOf(query), 1)\n    }\n  }\n\n  setTypeParser(oid, format, parseFn) {\n    return this._types.setTypeParser(oid, format, parseFn)\n  }\n\n  getTypeParser(oid, format) {\n    return this._types.getTypeParser(oid, format)\n  }\n\n  // Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\n  escapeIdentifier(str) {\n    return '\"' + str.replace(/\"/g, '\"\"') + '\"'\n  }\n\n  // Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\n  escapeLiteral(str) {\n    var hasBackslash = false\n    var escaped = \"'\"\n\n    for (var i = 0; i < str.length; i++) {\n      var c = str[i]\n      if (c === \"'\") {\n        escaped += c + c\n      } else if (c === '\\\\') {\n        escaped += c + c\n        hasBackslash = true\n      } else {\n        escaped += c\n      }\n    }\n\n    escaped += \"'\"\n\n    if (hasBackslash === true) {\n      escaped = ' E' + escaped\n    }\n\n    return escaped\n  }\n\n  _pulseQueryQueue() {\n    if (this.readyForQuery === true) {\n      this.activeQuery = this.queryQueue.shift()\n      if (this.activeQuery) {\n        this.readyForQuery = false\n        this.hasExecuted = true\n\n        const queryError = this.activeQuery.submit(this.connection)\n        if (queryError) {\n          process.nextTick(() => {\n            this.activeQuery.handleError(queryError, this.connection)\n            this.readyForQuery = true\n            this._pulseQueryQueue()\n          })\n        }\n      } else if (this.hasExecuted) {\n        this.activeQuery = null\n        this.emit('drain')\n      }\n    }\n  }\n\n  query(config, values, callback) {\n    // can take in strings, config object or query object\n    var query\n    var result\n    var readTimeout\n    var readTimeoutTimer\n    var queryCallback\n\n    if (config === null || config === undefined) {\n      throw new TypeError('Client was passed a null or undefined query')\n    } else if (typeof config.submit === 'function') {\n      readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n      result = query = config\n      if (typeof values === 'function') {\n        query.callback = query.callback || values\n      }\n    } else {\n      readTimeout = this.connectionParameters.query_timeout\n      query = new Query(config, values, callback)\n      if (!query.callback) {\n        result = new this._Promise((resolve, reject) => {\n          query.callback = (err, res) => (err ? reject(err) : resolve(res))\n        })\n      }\n    }\n\n    if (readTimeout) {\n      queryCallback = query.callback\n\n      readTimeoutTimer = setTimeout(() => {\n        var error = new Error('Query read timeout')\n\n        process.nextTick(() => {\n          query.handleError(error, this.connection)\n        })\n\n        queryCallback(error)\n\n        // we already returned an error,\n        // just do nothing if query completes\n        query.callback = () => {}\n\n        // Remove from queue\n        var index = this.queryQueue.indexOf(query)\n        if (index > -1) {\n          this.queryQueue.splice(index, 1)\n        }\n\n        this._pulseQueryQueue()\n      }, readTimeout)\n\n      query.callback = (err, res) => {\n        clearTimeout(readTimeoutTimer)\n        queryCallback(err, res)\n      }\n    }\n\n    if (this.binary && !query.binary) {\n      query.binary = true\n    }\n\n    if (query._result && !query._result._types) {\n      query._result._types = this._types\n    }\n\n    if (!this._queryable) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client has encountered a connection error and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    if (this._ending) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client was closed and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    this.queryQueue.push(query)\n    this._pulseQueryQueue()\n    return result\n  }\n\n  end(cb) {\n    this._ending = true\n\n    // if we have never connected, then end is a noop, callback immediately\n    if (!this.connection._connecting) {\n      if (cb) {\n        cb()\n      } else {\n        return this._Promise.resolve()\n      }\n    }\n\n    if (this.activeQuery || !this._queryable) {\n      // if we have an active query we need to force a disconnect\n      // on the socket - otherwise a hung query could block end forever\n      this.connection.stream.destroy()\n    } else {\n      this.connection.end()\n    }\n\n    if (cb) {\n      this.connection.once('end', cb)\n    } else {\n      return new this._Promise((resolve) => {\n        this.connection.once('end', resolve)\n      })\n    }\n  }\n}\n\n// expose a Query constructor\nClient.Query = Query\n\nmodule.exports = Client\n","'use strict'\n\nvar dns = require('dns')\n\nvar defaults = require('./defaults')\n\nvar parse = require('pg-connection-string').parse // parses a connection string\n\nvar val = function (key, config, envVar) {\n  if (envVar === undefined) {\n    envVar = process.env['PG' + key.toUpperCase()]\n  } else if (envVar === false) {\n    // do nothing ... use false\n  } else {\n    envVar = process.env[envVar]\n  }\n\n  return config[key] || envVar || defaults[key]\n}\n\nvar readSSLConfigFromEnvironment = function () {\n  switch (process.env.PGSSLMODE) {\n    case 'disable':\n      return false\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full':\n      return true\n    case 'no-verify':\n      return { rejectUnauthorized: false }\n  }\n  return defaults.ssl\n}\n\n// Convert arg to a string, surround in single quotes, and escape single quotes and backslashes\nvar quoteParamValue = function (value) {\n  return \"'\" + ('' + value).replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\") + \"'\"\n}\n\nvar add = function (params, config, paramName) {\n  var value = config[paramName]\n  if (value !== undefined && value !== null) {\n    params.push(paramName + '=' + quoteParamValue(value))\n  }\n}\n\nclass ConnectionParameters {\n  constructor(config) {\n    // if a string is passed, it is a raw connection string so we parse it into a config\n    config = typeof config === 'string' ? parse(config) : config || {}\n\n    // if the config has a connectionString defined, parse IT into the config we use\n    // this will override other default values with what is stored in connectionString\n    if (config.connectionString) {\n      config = Object.assign({}, config, parse(config.connectionString))\n    }\n\n    this.user = val('user', config)\n    this.database = val('database', config)\n\n    if (this.database === undefined) {\n      this.database = this.user\n    }\n\n    this.port = parseInt(val('port', config), 10)\n    this.host = val('host', config)\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: val('password', config),\n    })\n\n    this.binary = val('binary', config)\n    this.options = val('options', config)\n\n    this.ssl = typeof config.ssl === 'undefined' ? readSSLConfigFromEnvironment() : config.ssl\n\n    // support passing in ssl=no-verify via connection string\n    if (this.ssl === 'no-verify') {\n      this.ssl = { rejectUnauthorized: false }\n    }\n\n    this.client_encoding = val('client_encoding', config)\n    this.replication = val('replication', config)\n    // a domain socket begins with '/'\n    this.isDomainSocket = !(this.host || '').indexOf('/')\n\n    this.application_name = val('application_name', config, 'PGAPPNAME')\n    this.fallback_application_name = val('fallback_application_name', config, false)\n    this.statement_timeout = val('statement_timeout', config, false)\n    this.idle_in_transaction_session_timeout = val('idle_in_transaction_session_timeout', config, false)\n    this.query_timeout = val('query_timeout', config, false)\n\n    if (config.connectionTimeoutMillis === undefined) {\n      this.connect_timeout = process.env.PGCONNECT_TIMEOUT || 0\n    } else {\n      this.connect_timeout = Math.floor(config.connectionTimeoutMillis / 1000)\n    }\n\n    if (config.keepAlive === false) {\n      this.keepalives = 0\n    } else if (config.keepAlive === true) {\n      this.keepalives = 1\n    }\n\n    if (typeof config.keepAliveInitialDelayMillis === 'number') {\n      this.keepalives_idle = Math.floor(config.keepAliveInitialDelayMillis / 1000)\n    }\n  }\n\n  getLibpqConnectionString(cb) {\n    var params = []\n    add(params, this, 'user')\n    add(params, this, 'password')\n    add(params, this, 'port')\n    add(params, this, 'application_name')\n    add(params, this, 'fallback_application_name')\n    add(params, this, 'connect_timeout')\n    add(params, this, 'options')\n\n    var ssl = typeof this.ssl === 'object' ? this.ssl : this.ssl ? { sslmode: this.ssl } : {}\n    add(params, ssl, 'sslmode')\n    add(params, ssl, 'sslca')\n    add(params, ssl, 'sslkey')\n    add(params, ssl, 'sslcert')\n    add(params, ssl, 'sslrootcert')\n\n    if (this.database) {\n      params.push('dbname=' + quoteParamValue(this.database))\n    }\n    if (this.replication) {\n      params.push('replication=' + quoteParamValue(this.replication))\n    }\n    if (this.host) {\n      params.push('host=' + quoteParamValue(this.host))\n    }\n    if (this.isDomainSocket) {\n      return cb(null, params.join(' '))\n    }\n    if (this.client_encoding) {\n      params.push('client_encoding=' + quoteParamValue(this.client_encoding))\n    }\n    dns.lookup(this.host, function (err, address) {\n      if (err) return cb(err, null)\n      params.push('hostaddr=' + quoteParamValue(address))\n      return cb(null, params.join(' '))\n    })\n  }\n}\n\nmodule.exports = ConnectionParameters\n","'use strict'\n\nvar net = require('net')\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\n\nconst { parse, serialize } = require('pg-protocol')\n\nconst flushBuffer = serialize.flush()\nconst syncBuffer = serialize.sync()\nconst endBuffer = serialize.end()\n\n// TODO(bmc) support binary mode at some point\nclass Connection extends EventEmitter {\n  constructor(config) {\n    super()\n    config = config || {}\n    this.stream = config.stream || new net.Socket()\n    this._keepAlive = config.keepAlive\n    this._keepAliveInitialDelayMillis = config.keepAliveInitialDelayMillis\n    this.lastBuffer = false\n    this.parsedStatements = {}\n    this.ssl = config.ssl || false\n    this._ending = false\n    this._emitMessage = false\n    var self = this\n    this.on('newListener', function (eventName) {\n      if (eventName === 'message') {\n        self._emitMessage = true\n      }\n    })\n  }\n\n  connect(port, host) {\n    var self = this\n\n    this._connecting = true\n    this.stream.setNoDelay(true)\n    this.stream.connect(port, host)\n\n    this.stream.once('connect', function () {\n      if (self._keepAlive) {\n        self.stream.setKeepAlive(true, self._keepAliveInitialDelayMillis)\n      }\n      self.emit('connect')\n    })\n\n    const reportStreamError = function (error) {\n      // errors about disconnections should be ignored during disconnect\n      if (self._ending && (error.code === 'ECONNRESET' || error.code === 'EPIPE')) {\n        return\n      }\n      self.emit('error', error)\n    }\n    this.stream.on('error', reportStreamError)\n\n    this.stream.on('close', function () {\n      self.emit('end')\n    })\n\n    if (!this.ssl) {\n      return this.attachListeners(this.stream)\n    }\n\n    this.stream.once('data', function (buffer) {\n      var responseCode = buffer.toString('utf8')\n      switch (responseCode) {\n        case 'S': // Server supports SSL connections, continue with a secure connection\n          break\n        case 'N': // Server does not support SSL connections\n          self.stream.end()\n          return self.emit('error', new Error('The server does not support SSL connections'))\n        default:\n          // Any other response byte, including 'E' (ErrorResponse) indicating a server error\n          self.stream.end()\n          return self.emit('error', new Error('There was an error establishing an SSL connection'))\n      }\n      var tls = require('tls')\n      const options = Object.assign(\n        {\n          socket: self.stream,\n        },\n        self.ssl\n      )\n      if (net.isIP(host) === 0) {\n        options.servername = host\n      }\n      try {\n        self.stream = tls.connect(options)\n      } catch (err) {\n        return self.emit('error', err)\n      }\n      self.attachListeners(self.stream)\n      self.stream.on('error', reportStreamError)\n\n      self.emit('sslconnect')\n    })\n  }\n\n  attachListeners(stream) {\n    stream.on('end', () => {\n      this.emit('end')\n    })\n    parse(stream, (msg) => {\n      var eventName = msg.name === 'error' ? 'errorMessage' : msg.name\n      if (this._emitMessage) {\n        this.emit('message', msg)\n      }\n      this.emit(eventName, msg)\n    })\n  }\n\n  requestSsl() {\n    this.stream.write(serialize.requestSsl())\n  }\n\n  startup(config) {\n    this.stream.write(serialize.startup(config))\n  }\n\n  cancel(processID, secretKey) {\n    this._send(serialize.cancel(processID, secretKey))\n  }\n\n  password(password) {\n    this._send(serialize.password(password))\n  }\n\n  sendSASLInitialResponseMessage(mechanism, initialResponse) {\n    this._send(serialize.sendSASLInitialResponseMessage(mechanism, initialResponse))\n  }\n\n  sendSCRAMClientFinalMessage(additionalData) {\n    this._send(serialize.sendSCRAMClientFinalMessage(additionalData))\n  }\n\n  _send(buffer) {\n    if (!this.stream.writable) {\n      return false\n    }\n    return this.stream.write(buffer)\n  }\n\n  query(text) {\n    this._send(serialize.query(text))\n  }\n\n  // send parse message\n  parse(query) {\n    this._send(serialize.parse(query))\n  }\n\n  // send bind message\n  bind(config) {\n    this._send(serialize.bind(config))\n  }\n\n  // send execute message\n  execute(config) {\n    this._send(serialize.execute(config))\n  }\n\n  flush() {\n    if (this.stream.writable) {\n      this.stream.write(flushBuffer)\n    }\n  }\n\n  sync() {\n    this._ending = true\n    this._send(flushBuffer)\n    this._send(syncBuffer)\n  }\n\n  end() {\n    // 0x58 = 'X'\n    this._ending = true\n    if (!this._connecting || !this.stream.writable) {\n      this.stream.end()\n      return\n    }\n    return this.stream.write(endBuffer, () => {\n      this.stream.end()\n    })\n  }\n\n  close(msg) {\n    this._send(serialize.close(msg))\n  }\n\n  describe(msg) {\n    this._send(serialize.describe(msg))\n  }\n\n  sendCopyFromChunk(chunk) {\n    this._send(serialize.copyData(chunk))\n  }\n\n  endCopyFrom() {\n    this._send(serialize.copyDone())\n  }\n\n  sendCopyFail(msg) {\n    this._send(serialize.copyFail(msg))\n  }\n}\n\nmodule.exports = Connection\n","'use strict'\n\nmodule.exports = {\n  // database host. defaults to localhost\n  host: 'localhost',\n\n  // database user's name\n  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  // name of database to connect\n  database: undefined,\n\n  // database user's password\n  password: null,\n\n  // a Postgres connection string to be used instead of setting individual connection items\n  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\n  // in the defaults object.\n  connectionString: undefined,\n\n  // database port\n  port: 5432,\n\n  // number of rows to return at a time from a prepared statement's\n  // portal. 0 will return all rows at once\n  rows: 0,\n\n  // binary result mode\n  binary: false,\n\n  // Connection pool options - see https://github.com/brianc/node-pg-pool\n\n  // number of connections to use in connection pool\n  // 0 will disable connection pooling\n  max: 10,\n\n  // max milliseconds a client can go unused before it is removed\n  // from the pool and destroyed\n  idleTimeoutMillis: 30000,\n\n  client_encoding: '',\n\n  ssl: false,\n\n  application_name: undefined,\n\n  fallback_application_name: undefined,\n\n  options: undefined,\n\n  parseInputDatesAsUTC: false,\n\n  // max milliseconds any query using this connection will execute for before timing out in error.\n  // false=unlimited\n  statement_timeout: false,\n\n  // Terminate any session with an open transaction that has been idle for longer than the specified duration in milliseconds\n  // false=unlimited\n  idle_in_transaction_session_timeout: false,\n\n  // max milliseconds to wait for query to complete (client side)\n  query_timeout: false,\n\n  connect_timeout: 0,\n\n  keepalives: 1,\n\n  keepalives_idle: 0,\n}\n\nvar pgTypes = require('pg-types')\n// save default parsers\nvar parseBigInteger = pgTypes.getTypeParser(20, 'text')\nvar parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text')\n\n// parse int8 so you can get your count values as actual numbers\nmodule.exports.__defineSetter__('parseInt8', function (val) {\n  pgTypes.setTypeParser(20, 'text', val ? pgTypes.getTypeParser(23, 'text') : parseBigInteger)\n  pgTypes.setTypeParser(1016, 'text', val ? pgTypes.getTypeParser(1007, 'text') : parseBigIntegerArray)\n})\n","'use strict'\n\nvar Client = require('./client')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\nvar Pool = require('pg-pool')\n\nconst poolFactory = (Client) => {\n  return class BoundPool extends Pool {\n    constructor(options) {\n      super(options, Client)\n    }\n  }\n}\n\nvar PG = function (clientConstructor) {\n  this.defaults = defaults\n  this.Client = clientConstructor\n  this.Query = this.Client.Query\n  this.Pool = poolFactory(this.Client)\n  this._pools = []\n  this.Connection = Connection\n  this.types = require('pg-types')\n}\n\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\n  module.exports = new PG(require('./native'))\n} else {\n  module.exports = new PG(Client)\n\n  // lazy require native module...the native module may not have installed\n  Object.defineProperty(module.exports, 'native', {\n    configurable: true,\n    enumerable: false,\n    get() {\n      var native = null\n      try {\n        native = new PG(require('./native'))\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err\n        }\n        /* eslint-disable no-console */\n        console.error(err.message)\n        /* eslint-enable no-console */\n      }\n\n      // overwrite module.exports.native so that getter is never called again\n      Object.defineProperty(module.exports, 'native', {\n        value: native,\n      })\n\n      return native\n    },\n  })\n}\n","'use strict'\n\n// eslint-disable-next-line\nvar Native = require('pg-native')\nvar TypeOverrides = require('../type-overrides')\nvar semver = require('semver')\nvar pkg = require('../../package.json')\nvar assert = require('assert')\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar ConnectionParameters = require('../connection-parameters')\n\nvar msg = 'Version >= ' + pkg.minNativeVersion + ' of pg-native required.'\nassert(semver.gte(Native.version, pkg.minNativeVersion), msg)\n\nvar NativeQuery = require('./query')\n\nvar Client = (module.exports = function (config) {\n  EventEmitter.call(this)\n  config = config || {}\n\n  this._Promise = config.Promise || global.Promise\n  this._types = new TypeOverrides(config.types)\n\n  this.native = new Native({\n    types: this._types,\n  })\n\n  this._queryQueue = []\n  this._ending = false\n  this._connecting = false\n  this._connected = false\n  this._queryable = true\n\n  // keep these on the object for legacy reasons\n  // for the time being. TODO: deprecate all this jazz\n  var cp = (this.connectionParameters = new ConnectionParameters(config))\n  this.user = cp.user\n\n  // \"hiding\" the password so it doesn't show up in stack traces\n  // or if the client is console.logged\n  Object.defineProperty(this, 'password', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: cp.password,\n  })\n  this.database = cp.database\n  this.host = cp.host\n  this.port = cp.port\n\n  // a hash to hold named queries\n  this.namedQueries = {}\n})\n\nClient.Query = NativeQuery\n\nutil.inherits(Client, EventEmitter)\n\nClient.prototype._errorAllQueries = function (err) {\n  const enqueueError = (query) => {\n    process.nextTick(() => {\n      query.native = this.native\n      query.handleError(err)\n    })\n  }\n\n  if (this._hasActiveQuery()) {\n    enqueueError(this._activeQuery)\n    this._activeQuery = null\n  }\n\n  this._queryQueue.forEach(enqueueError)\n  this._queryQueue.length = 0\n}\n\n// connect to the backend\n// pass an optional callback to be called once connected\n// or with an error if there was a connection error\nClient.prototype._connect = function (cb) {\n  var self = this\n\n  if (this._connecting) {\n    process.nextTick(() => cb(new Error('Client has already been connected. You cannot reuse a client.')))\n    return\n  }\n\n  this._connecting = true\n\n  this.connectionParameters.getLibpqConnectionString(function (err, conString) {\n    if (err) return cb(err)\n    self.native.connect(conString, function (err) {\n      if (err) {\n        self.native.end()\n        return cb(err)\n      }\n\n      // set internal states to connected\n      self._connected = true\n\n      // handle connection errors from the native layer\n      self.native.on('error', function (err) {\n        self._queryable = false\n        self._errorAllQueries(err)\n        self.emit('error', err)\n      })\n\n      self.native.on('notification', function (msg) {\n        self.emit('notification', {\n          channel: msg.relname,\n          payload: msg.extra,\n        })\n      })\n\n      // signal we are connected now\n      self.emit('connect')\n      self._pulseQueryQueue(true)\n\n      cb()\n    })\n  })\n}\n\nClient.prototype.connect = function (callback) {\n  if (callback) {\n    this._connect(callback)\n    return\n  }\n\n  return new this._Promise((resolve, reject) => {\n    this._connect((error) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\n// send a query to the server\n// this method is highly overloaded to take\n// 1) string query, optional array of parameters, optional function callback\n// 2) object query with {\n//    string query\n//    optional array values,\n//    optional function callback instead of as a separate parameter\n//    optional string name to name & cache the query plan\n//    optional string rowMode = 'array' for an array of results\n//  }\nClient.prototype.query = function (config, values, callback) {\n  var query\n  var result\n  var readTimeout\n  var readTimeoutTimer\n  var queryCallback\n\n  if (config === null || config === undefined) {\n    throw new TypeError('Client was passed a null or undefined query')\n  } else if (typeof config.submit === 'function') {\n    readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n    result = query = config\n    // accept query(new Query(...), (err, res) => { }) style\n    if (typeof values === 'function') {\n      config.callback = values\n    }\n  } else {\n    readTimeout = this.connectionParameters.query_timeout\n    query = new NativeQuery(config, values, callback)\n    if (!query.callback) {\n      let resolveOut, rejectOut\n      result = new this._Promise((resolve, reject) => {\n        resolveOut = resolve\n        rejectOut = reject\n      })\n      query.callback = (err, res) => (err ? rejectOut(err) : resolveOut(res))\n    }\n  }\n\n  if (readTimeout) {\n    queryCallback = query.callback\n\n    readTimeoutTimer = setTimeout(() => {\n      var error = new Error('Query read timeout')\n\n      process.nextTick(() => {\n        query.handleError(error, this.connection)\n      })\n\n      queryCallback(error)\n\n      // we already returned an error,\n      // just do nothing if query completes\n      query.callback = () => {}\n\n      // Remove from queue\n      var index = this._queryQueue.indexOf(query)\n      if (index > -1) {\n        this._queryQueue.splice(index, 1)\n      }\n\n      this._pulseQueryQueue()\n    }, readTimeout)\n\n    query.callback = (err, res) => {\n      clearTimeout(readTimeoutTimer)\n      queryCallback(err, res)\n    }\n  }\n\n  if (!this._queryable) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client has encountered a connection error and is not queryable'))\n    })\n    return result\n  }\n\n  if (this._ending) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client was closed and is not queryable'))\n    })\n    return result\n  }\n\n  this._queryQueue.push(query)\n  this._pulseQueryQueue()\n  return result\n}\n\n// disconnect from the backend server\nClient.prototype.end = function (cb) {\n  var self = this\n\n  this._ending = true\n\n  if (!this._connected) {\n    this.once('connect', this.end.bind(this, cb))\n  }\n  var result\n  if (!cb) {\n    result = new this._Promise(function (resolve, reject) {\n      cb = (err) => (err ? reject(err) : resolve())\n    })\n  }\n  this.native.end(function () {\n    self._errorAllQueries(new Error('Connection terminated'))\n\n    process.nextTick(() => {\n      self.emit('end')\n      if (cb) cb()\n    })\n  })\n  return result\n}\n\nClient.prototype._hasActiveQuery = function () {\n  return this._activeQuery && this._activeQuery.state !== 'error' && this._activeQuery.state !== 'end'\n}\n\nClient.prototype._pulseQueryQueue = function (initialConnection) {\n  if (!this._connected) {\n    return\n  }\n  if (this._hasActiveQuery()) {\n    return\n  }\n  var query = this._queryQueue.shift()\n  if (!query) {\n    if (!initialConnection) {\n      this.emit('drain')\n    }\n    return\n  }\n  this._activeQuery = query\n  query.submit(this)\n  var self = this\n  query.once('_done', function () {\n    self._pulseQueryQueue()\n  })\n}\n\n// attempt to cancel an in-progress query\nClient.prototype.cancel = function (query) {\n  if (this._activeQuery === query) {\n    this.native.cancel(function () {})\n  } else if (this._queryQueue.indexOf(query) !== -1) {\n    this._queryQueue.splice(this._queryQueue.indexOf(query), 1)\n  }\n}\n\nClient.prototype.setTypeParser = function (oid, format, parseFn) {\n  return this._types.setTypeParser(oid, format, parseFn)\n}\n\nClient.prototype.getTypeParser = function (oid, format) {\n  return this._types.getTypeParser(oid, format)\n}\n","'use strict'\nmodule.exports = require('./client')\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('../utils')\n\nvar NativeQuery = (module.exports = function (config, values, callback) {\n  EventEmitter.call(this)\n  config = utils.normalizeQueryConfig(config, values, callback)\n  this.text = config.text\n  this.values = config.values\n  this.name = config.name\n  this.callback = config.callback\n  this.state = 'new'\n  this._arrayMode = config.rowMode === 'array'\n\n  // if the 'row' event is listened for\n  // then emit them as they come in\n  // without setting singleRowMode to true\n  // this has almost no meaning because libpq\n  // reads all rows into memory befor returning any\n  this._emitRowEvents = false\n  this.on(\n    'newListener',\n    function (event) {\n      if (event === 'row') this._emitRowEvents = true\n    }.bind(this)\n  )\n})\n\nutil.inherits(NativeQuery, EventEmitter)\n\nvar errorFieldMap = {\n  /* eslint-disable quote-props */\n  sqlState: 'code',\n  statementPosition: 'position',\n  messagePrimary: 'message',\n  context: 'where',\n  schemaName: 'schema',\n  tableName: 'table',\n  columnName: 'column',\n  dataTypeName: 'dataType',\n  constraintName: 'constraint',\n  sourceFile: 'file',\n  sourceLine: 'line',\n  sourceFunction: 'routine',\n}\n\nNativeQuery.prototype.handleError = function (err) {\n  // copy pq error fields into the error object\n  var fields = this.native.pq.resultErrorFields()\n  if (fields) {\n    for (var key in fields) {\n      var normalizedFieldName = errorFieldMap[key] || key\n      err[normalizedFieldName] = fields[key]\n    }\n  }\n  if (this.callback) {\n    this.callback(err)\n  } else {\n    this.emit('error', err)\n  }\n  this.state = 'error'\n}\n\nNativeQuery.prototype.then = function (onSuccess, onFailure) {\n  return this._getPromise().then(onSuccess, onFailure)\n}\n\nNativeQuery.prototype.catch = function (callback) {\n  return this._getPromise().catch(callback)\n}\n\nNativeQuery.prototype._getPromise = function () {\n  if (this._promise) return this._promise\n  this._promise = new Promise(\n    function (resolve, reject) {\n      this._once('end', resolve)\n      this._once('error', reject)\n    }.bind(this)\n  )\n  return this._promise\n}\n\nNativeQuery.prototype.submit = function (client) {\n  this.state = 'running'\n  var self = this\n  this.native = client.native\n  client.native.arrayMode = this._arrayMode\n\n  var after = function (err, rows, results) {\n    client.native.arrayMode = false\n    setImmediate(function () {\n      self.emit('_done')\n    })\n\n    // handle possible query error\n    if (err) {\n      return self.handleError(err)\n    }\n\n    // emit row events for each row in the result\n    if (self._emitRowEvents) {\n      if (results.length > 1) {\n        rows.forEach((rowOfRows, i) => {\n          rowOfRows.forEach((row) => {\n            self.emit('row', row, results[i])\n          })\n        })\n      } else {\n        rows.forEach(function (row) {\n          self.emit('row', row, results)\n        })\n      }\n    }\n\n    // handle successful result\n    self.state = 'end'\n    self.emit('end', results)\n    if (self.callback) {\n      self.callback(null, results)\n    }\n  }\n\n  if (process.domain) {\n    after = process.domain.bind(after)\n  }\n\n  // named query\n  if (this.name) {\n    if (this.name.length > 63) {\n      /* eslint-disable no-console */\n      console.error('Warning! Postgres only supports 63 characters for query names.')\n      console.error('You supplied %s (%s)', this.name, this.name.length)\n      console.error('This can cause conflicts and silent errors executing queries')\n      /* eslint-enable no-console */\n    }\n    var values = (this.values || []).map(utils.prepareValue)\n\n    // check if the client has already executed this named query\n    // if so...just execute it again - skip the planning phase\n    if (client.namedQueries[this.name]) {\n      if (this.text && client.namedQueries[this.name] !== this.text) {\n        const err = new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n        return after(err)\n      }\n      return client.native.execute(this.name, values, after)\n    }\n    // plan the named query the first time, then execute it\n    return client.native.prepare(this.name, this.text, values.length, function (err) {\n      if (err) return after(err)\n      client.namedQueries[self.name] = self.text\n      return self.native.execute(self.name, values, after)\n    })\n  } else if (this.values) {\n    if (!Array.isArray(this.values)) {\n      const err = new Error('Query values must be an array')\n      return after(err)\n    }\n    var vals = this.values.map(utils.prepareValue)\n    client.native.query(this.text, vals, after)\n  } else {\n    client.native.query(this.text, after)\n  }\n}\n","'use strict'\n\nconst { EventEmitter } = require('events')\n\nconst Result = require('./result')\nconst utils = require('./utils')\n\nclass Query extends EventEmitter {\n  constructor(config, values, callback) {\n    super()\n\n    config = utils.normalizeQueryConfig(config, values, callback)\n\n    this.text = config.text\n    this.values = config.values\n    this.rows = config.rows\n    this.types = config.types\n    this.name = config.name\n    this.binary = config.binary\n    // use unique portal name each time\n    this.portal = config.portal || ''\n    this.callback = config.callback\n    this._rowMode = config.rowMode\n    if (process.domain && config.callback) {\n      this.callback = process.domain.bind(config.callback)\n    }\n    this._result = new Result(this._rowMode, this.types)\n\n    // potential for multiple results\n    this._results = this._result\n    this.isPreparedStatement = false\n    this._canceledDueToError = false\n    this._promise = null\n  }\n\n  requiresPreparation() {\n    // named queries must always be prepared\n    if (this.name) {\n      return true\n    }\n    // always prepare if there are max number of rows expected per\n    // portal execution\n    if (this.rows) {\n      return true\n    }\n    // don't prepare empty text queries\n    if (!this.text) {\n      return false\n    }\n    // prepare if there are values\n    if (!this.values) {\n      return false\n    }\n    return this.values.length > 0\n  }\n\n  _checkForMultirow() {\n    // if we already have a result with a command property\n    // then we've already executed one query in a multi-statement simple query\n    // turn our results into an array of results\n    if (this._result.command) {\n      if (!Array.isArray(this._results)) {\n        this._results = [this._result]\n      }\n      this._result = new Result(this._rowMode, this.types)\n      this._results.push(this._result)\n    }\n  }\n\n  // associates row metadata from the supplied\n  // message with this query object\n  // metadata used when parsing row results\n  handleRowDescription(msg) {\n    this._checkForMultirow()\n    this._result.addFields(msg.fields)\n    this._accumulateRows = this.callback || !this.listeners('row').length\n  }\n\n  handleDataRow(msg) {\n    let row\n\n    if (this._canceledDueToError) {\n      return\n    }\n\n    try {\n      row = this._result.parseRow(msg.fields)\n    } catch (err) {\n      this._canceledDueToError = err\n      return\n    }\n\n    this.emit('row', row, this._result)\n    if (this._accumulateRows) {\n      this._result.addRow(row)\n    }\n  }\n\n  handleCommandComplete(msg, con) {\n    this._checkForMultirow()\n    this._result.addCommandComplete(msg)\n    // need to sync after each command complete of a prepared statement\n    if (this.isPreparedStatement) {\n      con.sync()\n    }\n  }\n\n  // if a named prepared statement is created with empty query text\n  // the backend will send an emptyQuery message but *not* a command complete message\n  // execution on the connection will hang until the backend receives a sync message\n  handleEmptyQuery(con) {\n    if (this.isPreparedStatement) {\n      con.sync()\n    }\n  }\n\n  handleReadyForQuery(con) {\n    if (this._canceledDueToError) {\n      return this.handleError(this._canceledDueToError, con)\n    }\n    if (this.callback) {\n      this.callback(null, this._results)\n    }\n    this.emit('end', this._results)\n  }\n\n  handleError(err, connection) {\n    // need to sync after error during a prepared statement\n    if (this.isPreparedStatement) {\n      connection.sync()\n    }\n    if (this._canceledDueToError) {\n      err = this._canceledDueToError\n      this._canceledDueToError = false\n    }\n    // if callback supplied do not emit error event as uncaught error\n    // events will bubble up to node process\n    if (this.callback) {\n      return this.callback(err)\n    }\n    this.emit('error', err)\n  }\n\n  submit(connection) {\n    if (typeof this.text !== 'string' && typeof this.name !== 'string') {\n      return new Error('A query must have either text or a name. Supplying neither is unsupported.')\n    }\n    const previous = connection.parsedStatements[this.name]\n    if (this.text && previous && this.text !== previous) {\n      return new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n    }\n    if (this.values && !Array.isArray(this.values)) {\n      return new Error('Query values must be an array')\n    }\n    if (this.requiresPreparation()) {\n      this.prepare(connection)\n    } else {\n      connection.query(this.text)\n    }\n    return null\n  }\n\n  hasBeenParsed(connection) {\n    return this.name && connection.parsedStatements[this.name]\n  }\n\n  handlePortalSuspended(connection) {\n    this._getRows(connection, this.rows)\n  }\n\n  _getRows(connection, rows) {\n    connection.execute({\n      portal: this.portal,\n      rows: rows,\n    })\n    connection.flush()\n  }\n\n  // http://developer.postgresql.org/pgdocs/postgres/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY\n  prepare(connection) {\n    // prepared statements need sync to be called after each command\n    // complete or when an error is encountered\n    this.isPreparedStatement = true\n\n    // TODO refactor this poor encapsulation\n    if (!this.hasBeenParsed(connection)) {\n      connection.parse({\n        text: this.text,\n        name: this.name,\n        types: this.types,\n      })\n    }\n\n    if (this.values) {\n      try {\n        this.values = this.values.map(utils.prepareValue)\n      } catch (err) {\n        this.handleError(err, connection)\n        return\n      }\n    }\n\n    connection.bind({\n      portal: this.portal,\n      statement: this.name,\n      values: this.values,\n      binary: this.binary,\n    })\n\n    connection.describe({\n      type: 'P',\n      name: this.portal || '',\n    })\n\n    this._getRows(connection, this.rows)\n  }\n\n  handleCopyInResponse(connection) {\n    connection.sendCopyFail('No source stream defined')\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleCopyData(msg, connection) {\n    // noop\n  }\n}\n\nmodule.exports = Query\n","'use strict'\n\nvar types = require('pg-types')\n\nvar matchRegexp = /^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/\n\n// result object returned from query\n// in the 'end' event and also\n// passed as second argument to provided callback\nclass Result {\n  constructor(rowMode, types) {\n    this.command = null\n    this.rowCount = null\n    this.oid = null\n    this.rows = []\n    this.fields = []\n    this._parsers = undefined\n    this._types = types\n    this.RowCtor = null\n    this.rowAsArray = rowMode === 'array'\n    if (this.rowAsArray) {\n      this.parseRow = this._parseRowAsArray\n    }\n  }\n\n  // adds a command complete message\n  addCommandComplete(msg) {\n    var match\n    if (msg.text) {\n      // pure javascript\n      match = matchRegexp.exec(msg.text)\n    } else {\n      // native bindings\n      match = matchRegexp.exec(msg.command)\n    }\n    if (match) {\n      this.command = match[1]\n      if (match[3]) {\n        // COMMMAND OID ROWS\n        this.oid = parseInt(match[2], 10)\n        this.rowCount = parseInt(match[3], 10)\n      } else if (match[2]) {\n        // COMMAND ROWS\n        this.rowCount = parseInt(match[2], 10)\n      }\n    }\n  }\n\n  _parseRowAsArray(rowData) {\n    var row = new Array(rowData.length)\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      if (rawValue !== null) {\n        row[i] = this._parsers[i](rawValue)\n      } else {\n        row[i] = null\n      }\n    }\n    return row\n  }\n\n  parseRow(rowData) {\n    var row = {}\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      var field = this.fields[i].name\n      if (rawValue !== null) {\n        row[field] = this._parsers[i](rawValue)\n      } else {\n        row[field] = null\n      }\n    }\n    return row\n  }\n\n  addRow(row) {\n    this.rows.push(row)\n  }\n\n  addFields(fieldDescriptions) {\n    // clears field definitions\n    // multiple query statements in 1 action can result in multiple sets\n    // of rowDescriptions...eg: 'select NOW(); select 1::int;'\n    // you need to reset the fields\n    this.fields = fieldDescriptions\n    if (this.fields.length) {\n      this._parsers = new Array(fieldDescriptions.length)\n    }\n    for (var i = 0; i < fieldDescriptions.length; i++) {\n      var desc = fieldDescriptions[i]\n      if (this._types) {\n        this._parsers[i] = this._types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      } else {\n        this._parsers[i] = types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      }\n    }\n  }\n}\n\nmodule.exports = Result\n","'use strict'\nconst crypto = require('crypto')\n\nfunction startSession(mechanisms) {\n  if (mechanisms.indexOf('SCRAM-SHA-256') === -1) {\n    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported')\n  }\n\n  const clientNonce = crypto.randomBytes(18).toString('base64')\n\n  return {\n    mechanism: 'SCRAM-SHA-256',\n    clientNonce,\n    response: 'n,,n=*,r=' + clientNonce,\n    message: 'SASLInitialResponse',\n  }\n}\n\nfunction continueSession(session, password, serverData) {\n  if (session.message !== 'SASLInitialResponse') {\n    throw new Error('SASL: Last message was not SASLInitialResponse')\n  }\n\n  const sv = extractVariablesFromFirstServerMessage(serverData)\n\n  if (!sv.nonce.startsWith(session.clientNonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce')\n  }\n\n  var saltBytes = Buffer.from(sv.salt, 'base64')\n\n  var saltedPassword = Hi(password, saltBytes, sv.iteration)\n\n  var clientKey = createHMAC(saltedPassword, 'Client Key')\n  var storedKey = crypto.createHash('sha256').update(clientKey).digest()\n\n  var clientFirstMessageBare = 'n=*,r=' + session.clientNonce\n  var serverFirstMessage = 'r=' + sv.nonce + ',s=' + sv.salt + ',i=' + sv.iteration\n\n  var clientFinalMessageWithoutProof = 'c=biws,r=' + sv.nonce\n\n  var authMessage = clientFirstMessageBare + ',' + serverFirstMessage + ',' + clientFinalMessageWithoutProof\n\n  var clientSignature = createHMAC(storedKey, authMessage)\n  var clientProofBytes = xorBuffers(clientKey, clientSignature)\n  var clientProof = clientProofBytes.toString('base64')\n\n  var serverKey = createHMAC(saltedPassword, 'Server Key')\n  var serverSignatureBytes = createHMAC(serverKey, authMessage)\n\n  session.message = 'SASLResponse'\n  session.serverSignature = serverSignatureBytes.toString('base64')\n  session.response = clientFinalMessageWithoutProof + ',p=' + clientProof\n}\n\nfunction finalizeSession(session, serverData) {\n  if (session.message !== 'SASLResponse') {\n    throw new Error('SASL: Last message was not SASLResponse')\n  }\n\n  var serverSignature\n\n  String(serverData)\n    .split(',')\n    .forEach(function (part) {\n      switch (part[0]) {\n        case 'v':\n          serverSignature = part.substr(2)\n          break\n      }\n    })\n\n  if (serverSignature !== session.serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does not match')\n  }\n}\n\nfunction extractVariablesFromFirstServerMessage(data) {\n  var nonce, salt, iteration\n\n  String(data)\n    .split(',')\n    .forEach(function (part) {\n      switch (part[0]) {\n        case 'r':\n          nonce = part.substr(2)\n          break\n        case 's':\n          salt = part.substr(2)\n          break\n        case 'i':\n          iteration = parseInt(part.substr(2), 10)\n          break\n      }\n    })\n\n  if (!nonce) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing')\n  }\n\n  if (!salt) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing')\n  }\n\n  if (!iteration) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing')\n  }\n\n  return {\n    nonce,\n    salt,\n    iteration,\n  }\n}\n\nfunction xorBuffers(a, b) {\n  if (!Buffer.isBuffer(a)) a = Buffer.from(a)\n  if (!Buffer.isBuffer(b)) b = Buffer.from(b)\n  var res = []\n  if (a.length > b.length) {\n    for (var i = 0; i < b.length; i++) {\n      res.push(a[i] ^ b[i])\n    }\n  } else {\n    for (var j = 0; j < a.length; j++) {\n      res.push(a[j] ^ b[j])\n    }\n  }\n  return Buffer.from(res)\n}\n\nfunction createHMAC(key, msg) {\n  return crypto.createHmac('sha256', key).update(msg).digest()\n}\n\nfunction Hi(password, saltBytes, iterations) {\n  var ui1 = createHMAC(password, Buffer.concat([saltBytes, Buffer.from([0, 0, 0, 1])]))\n  var ui = ui1\n  for (var i = 0; i < iterations - 1; i++) {\n    ui1 = createHMAC(password, ui1)\n    ui = xorBuffers(ui, ui1)\n  }\n\n  return ui\n}\n\nmodule.exports = {\n  startSession,\n  continueSession,\n  finalizeSession,\n}\n","'use strict'\n\nvar types = require('pg-types')\n\nfunction TypeOverrides(userTypes) {\n  this._types = userTypes || types\n  this.text = {}\n  this.binary = {}\n}\n\nTypeOverrides.prototype.getOverrides = function (format) {\n  switch (format) {\n    case 'text':\n      return this.text\n    case 'binary':\n      return this.binary\n    default:\n      return {}\n  }\n}\n\nTypeOverrides.prototype.setTypeParser = function (oid, format, parseFn) {\n  if (typeof format === 'function') {\n    parseFn = format\n    format = 'text'\n  }\n  this.getOverrides(format)[oid] = parseFn\n}\n\nTypeOverrides.prototype.getTypeParser = function (oid, format) {\n  format = format || 'text'\n  return this.getOverrides(format)[oid] || this._types.getTypeParser(oid, format)\n}\n\nmodule.exports = TypeOverrides\n","'use strict'\n\nconst crypto = require('crypto')\n\nconst defaults = require('./defaults')\n\nfunction escapeElement(elementRepresentation) {\n  var escaped = elementRepresentation.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n\n  return '\"' + escaped + '\"'\n}\n\n// convert a JS array to a postgres array literal\n// uses comma separator so won't work for types like box that use\n// a different array separator.\nfunction arrayString(val) {\n  var result = '{'\n  for (var i = 0; i < val.length; i++) {\n    if (i > 0) {\n      result = result + ','\n    }\n    if (val[i] === null || typeof val[i] === 'undefined') {\n      result = result + 'NULL'\n    } else if (Array.isArray(val[i])) {\n      result = result + arrayString(val[i])\n    } else if (val[i] instanceof Buffer) {\n      result += '\\\\\\\\x' + val[i].toString('hex')\n    } else {\n      result += escapeElement(prepareValue(val[i]))\n    }\n  }\n  result = result + '}'\n  return result\n}\n\n// converts values from javascript types\n// to their 'raw' counterparts for use as a postgres parameter\n// note: you can override this function to provide your own conversion mechanism\n// for complex types, etc...\nvar prepareValue = function (val, seen) {\n  if (val instanceof Buffer) {\n    return val\n  }\n  if (ArrayBuffer.isView(val)) {\n    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)\n    if (buf.length === val.byteLength) {\n      return buf\n    }\n    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params\n  }\n  if (val instanceof Date) {\n    if (defaults.parseInputDatesAsUTC) {\n      return dateToStringUTC(val)\n    } else {\n      return dateToString(val)\n    }\n  }\n  if (Array.isArray(val)) {\n    return arrayString(val)\n  }\n  if (val === null || typeof val === 'undefined') {\n    return null\n  }\n  if (typeof val === 'object') {\n    return prepareObject(val, seen)\n  }\n  return val.toString()\n}\n\nfunction prepareObject(val, seen) {\n  if (val && typeof val.toPostgres === 'function') {\n    seen = seen || []\n    if (seen.indexOf(val) !== -1) {\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query')\n    }\n    seen.push(val)\n\n    return prepareValue(val.toPostgres(prepareValue), seen)\n  }\n  return JSON.stringify(val)\n}\n\nfunction pad(number, digits) {\n  number = '' + number\n  while (number.length < digits) {\n    number = '0' + number\n  }\n  return number\n}\n\nfunction dateToString(date) {\n  var offset = -date.getTimezoneOffset()\n\n  var year = date.getFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getMonth() + 1, 2) +\n    '-' +\n    pad(date.getDate(), 2) +\n    'T' +\n    pad(date.getHours(), 2) +\n    ':' +\n    pad(date.getMinutes(), 2) +\n    ':' +\n    pad(date.getSeconds(), 2) +\n    '.' +\n    pad(date.getMilliseconds(), 3)\n\n  if (offset < 0) {\n    ret += '-'\n    offset *= -1\n  } else {\n    ret += '+'\n  }\n\n  ret += pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction dateToStringUTC(date) {\n  var year = date.getUTCFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getUTCMonth() + 1, 2) +\n    '-' +\n    pad(date.getUTCDate(), 2) +\n    'T' +\n    pad(date.getUTCHours(), 2) +\n    ':' +\n    pad(date.getUTCMinutes(), 2) +\n    ':' +\n    pad(date.getUTCSeconds(), 2) +\n    '.' +\n    pad(date.getUTCMilliseconds(), 3)\n\n  ret += '+00:00'\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction normalizeQueryConfig(config, values, callback) {\n  // can take in strings or config objects\n  config = typeof config === 'string' ? { text: config } : config\n  if (values) {\n    if (typeof values === 'function') {\n      config.callback = values\n    } else {\n      config.values = values\n    }\n  }\n  if (callback) {\n    config.callback = callback\n  }\n  return config\n}\n\nconst md5 = function (string) {\n  return crypto.createHash('md5').update(string, 'utf-8').digest('hex')\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nconst postgresMd5PasswordHash = function (user, password, salt) {\n  var inner = md5(password + user)\n  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\nmodule.exports = {\n  prepareValue: function prepareValueWrapper(value) {\n    // this ensures that extra arguments do not get passed into prepareValue\n    // by accident, eg: from calling values.map(utils.prepareValue)\n    return prepareValue(value)\n  },\n  normalizeQueryConfig,\n  postgresMd5PasswordHash,\n  md5,\n}\n","'use strict';\n\nvar path = require('path')\n  , Stream = require('stream').Stream\n  , Split = require('split')\n  , util = require('util')\n  , defaultPort = 5432\n  , isWin = (process.platform === 'win32')\n  , warnStream = process.stderr\n;\n\n\nvar S_IRWXG = 56     //    00070(8)\n  , S_IRWXO = 7      //    00007(8)\n  , S_IFMT  = 61440  // 00170000(8)\n  , S_IFREG = 32768  //  0100000(8)\n;\nfunction isRegFile(mode) {\n    return ((mode & S_IFMT) == S_IFREG);\n}\n\nvar fieldNames = [ 'host', 'port', 'database', 'user', 'password' ];\nvar nrOfFields = fieldNames.length;\nvar passKey = fieldNames[ nrOfFields -1 ];\n\n\nfunction warn() {\n    var isWritable = (\n        warnStream instanceof Stream &&\n          true === warnStream.writable\n    );\n\n    if (isWritable) {\n        var args = Array.prototype.slice.call(arguments).concat(\"\\n\");\n        warnStream.write( util.format.apply(util, args) );\n    }\n}\n\n\nObject.defineProperty(module.exports, 'isWin', {\n    get : function() {\n        return isWin;\n    } ,\n    set : function(val) {\n        isWin = val;\n    }\n});\n\n\nmodule.exports.warnTo = function(stream) {\n    var old = warnStream;\n    warnStream = stream;\n    return old;\n};\n\nmodule.exports.getFileName = function(env){\n    env = env || process.env;\n    var file = env.PGPASSFILE || (\n        isWin ?\n          path.join( env.APPDATA , 'postgresql', 'pgpass.conf' ) :\n          path.join( env.HOME, '.pgpass' )\n    );\n    return file;\n};\n\nmodule.exports.usePgPass = function(stats, fname) {\n    if (Object.prototype.hasOwnProperty.call(process.env, 'PGPASSWORD')) {\n        return false;\n    }\n\n    if (isWin) {\n        return true;\n    }\n\n    fname = fname || '<unkn>';\n\n    if (! isRegFile(stats.mode)) {\n        warn('WARNING: password file \"%s\" is not a plain file', fname);\n        return false;\n    }\n\n    if (stats.mode & (S_IRWXG | S_IRWXO)) {\n        /* If password file is insecure, alert the user and ignore it. */\n        warn('WARNING: password file \"%s\" has group or world access; permissions should be u=rw (0600) or less', fname);\n        return false;\n    }\n\n    return true;\n};\n\n\nvar matcher = module.exports.match = function(connInfo, entry) {\n    return fieldNames.slice(0, -1).reduce(function(prev, field, idx){\n        if (idx == 1) {\n            // the port\n            if ( Number( connInfo[field] || defaultPort ) === Number( entry[field] ) ) {\n                return prev && true;\n            }\n        }\n        return prev && (\n            entry[field] === '*' ||\n              entry[field] === connInfo[field]\n        );\n    }, true);\n};\n\n\nmodule.exports.getPassword = function(connInfo, stream, cb) {\n    var pass;\n    var lineStream = stream.pipe(new Split());\n\n    function onLine(line) {\n        var entry = parseLine(line);\n        if (entry && isValidEntry(entry) && matcher(connInfo, entry)) {\n            pass = entry[passKey];\n            lineStream.end(); // -> calls onEnd(), but pass is set now\n        }\n    }\n\n    var onEnd = function() {\n        stream.destroy();\n        cb(pass);\n    };\n\n    var onErr = function(err) {\n        stream.destroy();\n        warn('WARNING: error on reading file: %s', err);\n        cb(undefined);\n    };\n\n    stream.on('error', onErr);\n    lineStream\n        .on('data', onLine)\n        .on('end', onEnd)\n        .on('error', onErr)\n    ;\n\n};\n\n\nvar parseLine = module.exports.parseLine = function(line) {\n    if (line.length < 11 || line.match(/^\\s+#/)) {\n        return null;\n    }\n\n    var curChar = '';\n    var prevChar = '';\n    var fieldIdx = 0;\n    var startIdx = 0;\n    var endIdx = 0;\n    var obj = {};\n    var isLastField = false;\n    var addToObj = function(idx, i0, i1) {\n        var field = line.substring(i0, i1);\n\n        if (! Object.hasOwnProperty.call(process.env, 'PGPASS_NO_DEESCAPE')) {\n            field = field.replace(/\\\\([:\\\\])/g, '$1');\n        }\n\n        obj[ fieldNames[idx] ] = field;\n    };\n\n    for (var i = 0 ; i < line.length-1 ; i += 1) {\n        curChar = line.charAt(i+1);\n        prevChar = line.charAt(i);\n\n        isLastField = (fieldIdx == nrOfFields-1);\n\n        if (isLastField) {\n            addToObj(fieldIdx, startIdx);\n            break;\n        }\n\n        if (i >= 0 && curChar == ':' && prevChar !== '\\\\') {\n            addToObj(fieldIdx, startIdx, i+1);\n\n            startIdx = i+2;\n            fieldIdx += 1;\n        }\n    }\n\n    obj = ( Object.keys(obj).length === nrOfFields ) ? obj : null;\n\n    return obj;\n};\n\n\nvar isValidEntry = module.exports.isValidEntry = function(entry){\n    var rules = {\n        // host\n        0 : function(x){\n            return x.length > 0;\n        } ,\n        // port\n        1 : function(x){\n            if (x === '*') {\n                return true;\n            }\n            x = Number(x);\n            return (\n                isFinite(x) &&\n                  x > 0 &&\n                  x < 9007199254740992 &&\n                  Math.floor(x) === x\n            );\n        } ,\n        // database\n        2 : function(x){\n            return x.length > 0;\n        } ,\n        // username\n        3 : function(x){\n            return x.length > 0;\n        } ,\n        // password\n        4 : function(x){\n            return x.length > 0;\n        }\n    };\n\n    for (var idx = 0 ; idx < fieldNames.length ; idx += 1) {\n        var rule = rules[idx];\n        var value = entry[ fieldNames[idx] ] || '';\n\n        var res = rule(value);\n        if (!res) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n","'use strict';\n\nvar path = require('path')\n  , fs = require('fs')\n  , helper = require('./helper.js')\n;\n\n\nmodule.exports = function(connInfo, cb) {\n    var file = helper.getFileName();\n    \n    fs.stat(file, function(err, stat){\n        if (err || !helper.usePgPass(stat, file)) {\n            return cb(undefined);\n        }\n\n        var st = fs.createReadStream(file);\n\n        helper.getPassword(connInfo, st, cb);\n    });\n};\n\nmodule.exports.warnTo = helper.warnTo;\n","'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nclass ArrayParser {\n  constructor (source, transform) {\n    this.source = source\n    this.transform = transform || identity\n    this.position = 0\n    this.entries = []\n    this.recorded = []\n    this.dimension = 0\n  }\n\n  isEof () {\n    return this.position >= this.source.length\n  }\n\n  nextCharacter () {\n    var character = this.source[this.position++]\n    if (character === '\\\\') {\n      return {\n        value: this.source[this.position++],\n        escaped: true\n      }\n    }\n    return {\n      value: character,\n      escaped: false\n    }\n  }\n\n  record (character) {\n    this.recorded.push(character)\n  }\n\n  newEntry (includeEmpty) {\n    var entry\n    if (this.recorded.length > 0 || includeEmpty) {\n      entry = this.recorded.join('')\n      if (entry === 'NULL' && !includeEmpty) {\n        entry = null\n      }\n      if (entry !== null) entry = this.transform(entry)\n      this.entries.push(entry)\n      this.recorded = []\n    }\n  }\n\n  consumeDimensions () {\n    if (this.source[0] === '[') {\n      while (!this.isEof()) {\n        var char = this.nextCharacter()\n        if (char.value === '=') break\n      }\n    }\n  }\n\n  parse (nested) {\n    var character, parser, quote\n    this.consumeDimensions()\n    while (!this.isEof()) {\n      character = this.nextCharacter()\n      if (character.value === '{' && !quote) {\n        this.dimension++\n        if (this.dimension > 1) {\n          parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n          this.entries.push(parser.parse(true))\n          this.position += parser.position - 2\n        }\n      } else if (character.value === '}' && !quote) {\n        this.dimension--\n        if (!this.dimension) {\n          this.newEntry()\n          if (nested) return this.entries\n        }\n      } else if (character.value === '\"' && !character.escaped) {\n        if (quote) this.newEntry(true)\n        quote = !quote\n      } else if (character.value === ',' && !quote) {\n        this.newEntry()\n      } else {\n        this.record(character.value)\n      }\n    }\n    if (this.dimension !== 0) {\n      throw new Error('array dimension not balanced')\n    }\n    return this.entries\n  }\n}\n\nfunction identity (value) {\n  return value\n}\n","'use strict'\n\nmodule.exports = function parseBytea (input) {\n  if (/^\\\\x/.test(input)) {\n    // new 'hex' style response (pg >9.0)\n    return new Buffer(input.substr(2), 'hex')\n  }\n  var output = ''\n  var i = 0\n  while (i < input.length) {\n    if (input[i] !== '\\\\') {\n      output += input[i]\n      ++i\n    } else {\n      if (/[0-7]{3}/.test(input.substr(i + 1, 3))) {\n        output += String.fromCharCode(parseInt(input.substr(i + 1, 3), 8))\n        i += 4\n      } else {\n        var backslashes = 1\n        while (i + backslashes < input.length && input[i + backslashes] === '\\\\') {\n          backslashes++\n        }\n        for (var k = 0; k < Math.floor(backslashes / 2); ++k) {\n          output += '\\\\'\n        }\n        i += Math.floor(backslashes / 2) * 2\n      }\n    }\n  }\n  return new Buffer(output, 'binary')\n}\n","'use strict'\n\nvar DATE_TIME = /(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?.*?( BC)?$/\nvar DATE = /^(\\d{1,})-(\\d{2})-(\\d{2})( BC)?$/\nvar TIME_ZONE = /([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/\nvar INFINITY = /^-?infinity$/\n\nmodule.exports = function parseDate (isoDate) {\n  if (INFINITY.test(isoDate)) {\n    // Capitalize to Infinity before passing to Number\n    return Number(isoDate.replace('i', 'I'))\n  }\n  var matches = DATE_TIME.exec(isoDate)\n\n  if (!matches) {\n    // Force YYYY-MM-DD dates to be parsed as local time\n    return getDate(isoDate) || null\n  }\n\n  var isBC = !!matches[8]\n  var year = parseInt(matches[1], 10)\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  var hour = parseInt(matches[4], 10)\n  var minute = parseInt(matches[5], 10)\n  var second = parseInt(matches[6], 10)\n\n  var ms = matches[7]\n  ms = ms ? 1000 * parseFloat(ms) : 0\n\n  var date\n  var offset = timeZoneOffset(isoDate)\n  if (offset != null) {\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, ms))\n\n    // Account for years from 0 to 99 being interpreted as 1900-1999\n    // by Date.UTC / the multi-argument form of the Date constructor\n    if (is0To99(year)) {\n      date.setUTCFullYear(year)\n    }\n\n    if (offset !== 0) {\n      date.setTime(date.getTime() - offset)\n    }\n  } else {\n    date = new Date(year, month, day, hour, minute, second, ms)\n\n    if (is0To99(year)) {\n      date.setFullYear(year)\n    }\n  }\n\n  return date\n}\n\nfunction getDate (isoDate) {\n  var matches = DATE.exec(isoDate)\n  if (!matches) {\n    return\n  }\n\n  var year = parseInt(matches[1], 10)\n  var isBC = !!matches[4]\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  // YYYY-MM-DD will be parsed as local time\n  var date = new Date(year, month, day)\n\n  if (is0To99(year)) {\n    date.setFullYear(year)\n  }\n\n  return date\n}\n\n// match timezones:\n// Z (UTC)\n// -05\n// +06:30\nfunction timeZoneOffset (isoDate) {\n  if (isoDate.endsWith('+00')) {\n    return 0\n  }\n\n  var zone = TIME_ZONE.exec(isoDate.split(' ')[1])\n  if (!zone) return\n  var type = zone[1]\n\n  if (type === 'Z') {\n    return 0\n  }\n  var sign = type === '-' ? -1 : 1\n  var offset = parseInt(zone[2], 10) * 3600 +\n    parseInt(zone[3] || 0, 10) * 60 +\n    parseInt(zone[4] || 0, 10)\n\n  return offset * sign * 1000\n}\n\nfunction bcYearToNegativeYear (year) {\n  // Account for numerical difference between representations of BC years\n  // See: https://github.com/bendrucker/postgres-date/issues/5\n  return -(year - 1)\n}\n\nfunction is0To99 (num) {\n  return num >= 0 && num < 100\n}\n","'use strict'\n\nvar extend = require('xtend/mutable')\n\nmodule.exports = PostgresInterval\n\nfunction PostgresInterval (raw) {\n  if (!(this instanceof PostgresInterval)) {\n    return new PostgresInterval(raw)\n  }\n  extend(this, parse(raw))\n}\nvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\nPostgresInterval.prototype.toPostgres = function () {\n  var filtered = properties.filter(this.hasOwnProperty, this)\n\n  // In addition to `properties`, we need to account for fractions of seconds.\n  if (this.milliseconds && filtered.indexOf('seconds') < 0) {\n    filtered.push('seconds')\n  }\n\n  if (filtered.length === 0) return '0'\n  return filtered\n    .map(function (property) {\n      var value = this[property] || 0\n\n      // Account for fractional part of seconds,\n      // remove trailing zeroes.\n      if (property === 'seconds' && this.milliseconds) {\n        value = (value + this.milliseconds / 1000).toFixed(6).replace(/\\.?0+$/, '')\n      }\n\n      return value + ' ' + property\n    }, this)\n    .join(' ')\n}\n\nvar propertiesISOEquivalent = {\n  years: 'Y',\n  months: 'M',\n  days: 'D',\n  hours: 'H',\n  minutes: 'M',\n  seconds: 'S'\n}\nvar dateProperties = ['years', 'months', 'days']\nvar timeProperties = ['hours', 'minutes', 'seconds']\n// according to ISO 8601\nPostgresInterval.prototype.toISOString = PostgresInterval.prototype.toISO = function () {\n  var datePart = dateProperties\n    .map(buildProperty, this)\n    .join('')\n\n  var timePart = timeProperties\n    .map(buildProperty, this)\n    .join('')\n\n  return 'P' + datePart + 'T' + timePart\n\n  function buildProperty (property) {\n    var value = this[property] || 0\n\n    // Account for fractional part of seconds,\n    // remove trailing zeroes.\n    if (property === 'seconds' && this.milliseconds) {\n      value = (value + this.milliseconds / 1000).toFixed(6).replace(/0+$/, '')\n    }\n\n    return value + propertiesISOEquivalent[property]\n  }\n}\n\nvar NUMBER = '([+-]?\\\\d+)'\nvar YEAR = NUMBER + '\\\\s+years?'\nvar MONTH = NUMBER + '\\\\s+mons?'\nvar DAY = NUMBER + '\\\\s+days?'\nvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?'\nvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n  return '(' + regexString + ')?'\n})\n  .join('\\\\s*'))\n\n// Positions of values in regex match\nvar positions = {\n  years: 2,\n  months: 4,\n  days: 6,\n  hours: 9,\n  minutes: 10,\n  seconds: 11,\n  milliseconds: 12\n}\n// We can use negative time\nvar negatives = ['hours', 'minutes', 'seconds', 'milliseconds']\n\nfunction parseMilliseconds (fraction) {\n  // add omitted zeroes\n  var microseconds = fraction + '000000'.slice(fraction.length)\n  return parseInt(microseconds, 10) / 1000\n}\n\nfunction parse (interval) {\n  if (!interval) return {}\n  var matches = INTERVAL.exec(interval)\n  var isNegative = matches[8] === '-'\n  return Object.keys(positions)\n    .reduce(function (parsed, property) {\n      var position = positions[property]\n      var value = matches[position]\n      // no empty string\n      if (!value) return parsed\n      // milliseconds are actually microseconds (up to 6 digits)\n      // with omitted trailing zeroes.\n      value = property === 'milliseconds'\n        ? parseMilliseconds(value)\n        : parseInt(value, 10)\n      // no zeros\n      if (!value) return parsed\n      if (isNegative && ~negatives.indexOf(property)) {\n        value *= -1\n      }\n      parsed[property] = value\n      return parsed\n    }, {})\n}\n","// export the class if we are in a Node-like system.\nif (typeof module === 'object' && module.exports === exports)\n  exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      return (/^[0-9]+$/.test(id)) ? +id : id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.inspect = function() {\n  return '<SemVer \"' + this + '\">';\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.inspect = function() {\n  return '<SemVer Comparator \"' + this + '\">';\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if ((range instanceof Range) && range.loose === loose)\n    return range;\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.inspect = function() {\n  return '<SemVer Range \"' + this.range + '\">';\n};\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0- <1.3.0-\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm)\n          M = +M + 1\n        else\n          m = +m + 1\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        return true;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Use the define() function if we're in AMD land\nif (typeof define === 'function' && define.amd)\n  define(exports);\n","//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\n\nvar through = require('through')\nvar Decoder = require('string_decoder').StringDecoder\n\nmodule.exports = split\n\n//TODO pass in a function to map across the lines.\n\nfunction split (matcher, mapper, options) {\n  var decoder = new Decoder()\n  var soFar = ''\n  var maxLength = options && options.maxLength;\n  var trailing = options && options.trailing === false ? false : true\n  if('function' === typeof matcher)\n    mapper = matcher, matcher = null\n  if (!matcher)\n    matcher = /\\r?\\n/\n\n  function emit(stream, piece) {\n    if(mapper) {\n      try {\n        piece = mapper(piece)\n      }\n      catch (err) {\n        return stream.emit('error', err)\n      }\n      if('undefined' !== typeof piece)\n        stream.queue(piece)\n    }\n    else\n      stream.queue(piece)\n  }\n\n  function next (stream, buffer) {\n    var pieces = ((soFar != null ? soFar : '') + buffer).split(matcher)\n    soFar = pieces.pop()\n\n    if (maxLength && soFar.length > maxLength)\n      return stream.emit('error', new Error('maximum buffer reached'))\n\n    for (var i = 0; i < pieces.length; i++) {\n      var piece = pieces[i]\n      emit(stream, piece)\n    }\n  }\n\n  return through(function (b) {\n    next(this, decoder.write(b))\n  },\n  function () {\n    if(decoder.end)\n      next(this, decoder.end())\n    if(trailing && soFar != null)\n      emit(this, soFar)\n    this.queue(null)\n  })\n}\n","var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","module.exports = require(\"assert\");","module.exports = require(\"crypto\");","module.exports = require(\"dns\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");"],"sourceRoot":""}