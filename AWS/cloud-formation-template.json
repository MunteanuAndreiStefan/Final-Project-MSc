{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {},
    "Parameters": {},
    "Resources": {
        "SMExecutionPolicy": {
            "DependsOn": [
                "SMExecutionRole"
            ],
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "MyLambdaToMakeLogsRolePolicy",
                "Roles": [
                    {
                        "Ref": "SMExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:*"
                            ],
                            "Resource": [
                                "arn:aws:logs:*:*:*"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ec2:Describe*",
                                "ec2:CreateSnapshot",
                                "ec2:DeleteSnapshot",
                                "ec2:CreateTags",
                                "ec2:ModifySnapshotAttribute",
                                "ec2:ResetSnapshotAttribute"
                            ],
                            "Resource": [
                                "*"
                            ]
                        }
                    ]
                }
            }
        },
        "SMExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "LambdaServiceRole",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                ],
                "Policies": [
                    {
                        "PolicyName": "LambdaServiceRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:Get*",
                                        "s3:List*"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "SMApiServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "LambdaAPIServiceRole",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "apigateway.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                ],
                "Policies": [
                    {
                        "PolicyName": "API_Service_Role_Policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": "lambda:InvokeFunction",
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "SMLambda",
                                            "Arn"
                                        ]
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "SMBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": "social-media-bucket"
            }
        },
        "SMDatabase": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBSecurityGroups": [
                    {
                        "Ref": "MyDbSecurityByEC2SecurityGroup"
                    },
                    {
                        "Ref": "MyDbSecurityByCIDRIPGroup"
                    }
                ],
                "AllocatedStorage": "10",
                "DBInstanceClass": "db.t2.micro",
                "Engine": "PostgreSQL",
                "MasterUsername": "munteanu",
                "MasterUserPassword": "munteanu"
            },
            "DeletionPolicy": "Snapshot"
        },
        "SMLambda": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [
                "SMExecutionRole",
                "SMExecutionPolicy"
            ],
            "Properties": {
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "\n",
                            [
                                "exports.handler = async (event) => {",
                                "    // TODO implement",
                                "    const response = {",
                                "        statusCode: 200,",
                                "        body: JSON.stringify('Hello from Munteanu!'),",
                                "    };",
                                "    return response;",
                                "};"
                            ]
                        ]
                    }
                },
                "Description": "Social media core Lamda Function. The brain of the social-media-builder mechanism.",
                "FunctionName": "social-media-lambda",
                "Handler": "index.handler",
                "MemorySize": 1024,
                "Role": {
                    "Fn::GetAtt": [
                        "SMExecutionRole",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs12.x",
                "Timeout": 5
            }
        },
        "SMRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Description": "API Gateway for SMLambda",
                "Name": "SMLambda",
                "EndpointConfiguration": {
                    "Types": []
                },
                "Body": {
                    "swagger": "2.0",
                    "info": {
                        "description": "API to return Car Image",
                        "version": "1.0.0",
                        "title": "Get posts API"
                    },
                    "schemes": [
                        "https"
                    ],
                    "paths": {
                        "/": {},
                        "/posts": {
                            "get": {
                                "produces": [
                                    "application/json",
                                    "application/customer-error",
                                    "application/api_not_found",
                                    "application/no_record",
                                    "application/api_error"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    },
                                    "201": {
                                        "description": "201 response"
                                    },
                                    "204": {
                                        "description": "204 response"
                                    },
                                    "230": {
                                        "description": "230 response"
                                    },
                                    "231": {
                                        "description": "231 response"
                                    },
                                    "232": {
                                        "description": "232 response"
                                    },
                                    "233": {
                                        "description": "233 response"
                                    }
                                },
                                "security": [
                                    {
                                        "sigv4": []
                                    }
                                ],
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": {
                                        "Fn::Join": [
                                            ":",
                                            [
                                                "arn:aws:apigateway",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                "lambda:path/2015-03-31/functions/arn:aws:lambda",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                "function",
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            {
                                                                "Ref": "SMLambda"
                                                            },
                                                            "/invocations"
                                                        ]
                                                    ]
                                                }
                                            ]
                                        ]
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "credentials": {
                                        "Fn::GetAtt": [
                                            "SMApiServiceRole",
                                            "Arn"
                                        ]
                                    },
                                    "type": "aws"
                                }
                            }
                        }
                    },
                    "securityDefinitions": {
                        "sigv4": {
                            "type": "apiKey",
                            "name": "Authorization",
                            "in": "header",
                            "x-amazon-apigateway-authtype": "awsSigv4"
                        }
                    },
                    "definitions": {
                        "Empty": {
                            "type": "object",
                            "title": "Empty Schema"
                        }
                    }
                }
            }
        },
        "SMApiGatewayAccount": {
            "Type": "AWS::ApiGateway::Account",
            "Properties": {
                "CloudWatchRoleArn": {
                    "Fn::GetAtt": [
                        "SMApiServiceRole",
                        "Arn"
                    ]
                }
            }
        },
        "SMRestAPIStage": {
            "Type": "AWS::ApiGateway::Stage",
            "DependsOn": [
                "SMApiGatewayAccount"
            ],
            "Properties": {
                "DeploymentId": {
                    "Ref": "SMRestAPIDeployment"
                },
                "MethodSettings": [
                    {
                        "DataTraceEnabled": true,
                        "HttpMethod": "*",
                        "LoggingLevel": "INFO",
                        "ResourcePath": "/*"
                    }
                ],
                "RestApiId": {
                    "Ref": "SMRestApi"
                },
                "StageName": "dev"
            }
        },
        "SMRestAPIDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": [
                "SMRestApi"
            ],
            "Properties": {
                "RestApiId": {
                    "Ref": "SMRestApi"
                },
                "StageName": "dummy"
            }
        }
    }
}